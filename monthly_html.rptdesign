<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.3.2.v20151229-1956 Build &lt;4.3.2.v20151229-1956></property>
    <list-property name="userProperties">
        <structure>
            <property name="name">htmlCenterAlign</property>
            <property name="type">boolean</property>
        </structure>
    </list-property>
    <property name="htmlCenterAlign">true</property>
    <list-property name="scriptLibs">
        <structure>
            <property name="name">gson-2.3.1.jar</property>
        </structure>
    </list-property>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[function TransCard(a){
    a = parseInt(a);
        switch(a)
        { 
          case 02:  a="储蓄卡";  break;            
          case 03:  a="信用卡";  break;
          case 04:  a="信用卡";  break;      
        }
        return a;
}

function TransType(a){
    a = parseInt(a);
        switch(a)
        { 
          case 1:  a="娱乐";  break;            
          case 2:  a="餐饮";  break;
          case 3:  a="医教";  break;
          case 4:  a="房汽";  break;
          case 5:  a="出行";  break;
          case 6:  a="购物";  break;
          case 7:  a="网购";  break;
          case 8:  a="理财";  break;
          case 9:  a="居家";  break;
          case 100:a="其他";  break;
        }
        return a;
}


function TransPro(a){
    a = parseInt(a);
    switch(a){
        case 110:        pro="北京";        break;
        case 120:        pro="天津";        break;
        case 130:        pro="河北";        break;
        case 140:        pro="山西";        break;
        case 150:        pro="内蒙古";      break;
        case 210:        pro="辽宁";        break;
        case 212:        pro="辽宁";        break;
        case 220:        pro="吉林";        break;
        case 230:        pro="黑龙江";      break;
        case 310:        pro="上海";        break;
        case 320:        pro="江苏";        break;
        case 322:        pro="江苏";        break;
        case 330:        pro="浙江";        break;
        case 331:        pro="浙江";        break;
        case 340:        pro="安徽";        break;
        case 350:        pro="福建";        break;
        case 351:        pro="福建";        break;
        case 360:        pro="江西";        break;
        case 370:        pro="山东";        break;
        case 371:        pro="山东";        break;        
        case 410:        pro="河南";        break;
        case 420:        pro="湖北";        break;
        case 422:        pro="湖北";        break;
        case 430:        pro="湖南";        break;
        case 440:        pro="广东";        break;
        case 442:        pro="广东";        break;
        case 450:        pro="广西";        break;
        case 460:        pro="海南";        break;
        case 500:        pro="重庆";        break;
        case 510:        pro="四川";        break;
        case 520:        pro="贵州";        break;
        case 530:        pro="云南";        break;
        case 540:        pro="西藏";        break;
        case 610:        pro="陕西";        break;
        case 620:        pro="甘肃";        break;
        case 630:        pro="青海";        break;
        case 640:        pro="宁夏";        break;
        case 650:        pro="新疆";        break;
    }          
    return pro;
}


function desc(x,y)  
 {  
     if (x > y)    
         return -1;  
     if (x < y)            
         return 1;  
 }  
function asc(x,y)  
 {  
     if (x > y)    
         return 1;  
     if (x < y)            
         return -1;  
 }  

 function findName(x){
     for(var i=0; i<topItemCode.length; i++){
         if(x == topItemCode[i]){return true;}       
     }
     return false;
 }

 function SortValuesItems(values, items){    
    var values2 = [];
    var items2 = [];
    var copied = new Array();
    values2 = values.slice(0);
    values2.sort(desc);
    for(var i = 0; i<values2.length; i++){            
                for(var j = 0; j<values.length; j++){
                    if (values2[i] == values[j] &amp;&amp; copied[j]!=1){            
                        items2.push(items[j]);
                        copied[j]=1;
                        break;          
                    }
                }            
    }
    return items2;
}

     ]]></method>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">fixed layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <parameters>
        <scalar-parameter name="month" id="1317">
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">201511</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="key" id="1867">
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">Tian D&amp;semi110101198109172222&amp;semi676.66&amp;semi0.99&amp;semi000464313136464310003&amp;comma02&amp;comma114.11&amp;comma0.17&amp;semi000464313136464310002&amp;comma03&amp;comma224.22&amp;comma0.33&amp;semi000464313136464310001&amp;comma02&amp;comma338.33&amp;comma0.50`3&amp;comma112.11&amp;semi2&amp;comma0.00&amp;semi1&amp;comma229.22&amp;semi7&amp;comma0.00&amp;semi6&amp;comma0.00&amp;semi5&amp;comma0.00&amp;semi4&amp;comma0.00&amp;semi9&amp;comma335.33&amp;semi8&amp;comma0.00&amp;semi100&amp;comma0.00&amp;under3&amp;comma112.11&amp;semi2&amp;comma0.00&amp;semi1&amp;comma229.22&amp;semi7&amp;comma0.00&amp;semi6&amp;comma0.00&amp;semi5&amp;comma0.00&amp;semi4&amp;comma0.00&amp;semi9&amp;comma335.33&amp;semi8&amp;comma0.00&amp;semi100&amp;comma0.00&amp;under1&amp;under3&amp;comma112.11&amp;semi2&amp;comma0.00&amp;semi1&amp;comma229.22&amp;semi7&amp;comma0.00&amp;semi6&amp;comma0.00&amp;semi5&amp;comma0.00&amp;semi4&amp;comma0.00&amp;semi9&amp;comma335.33&amp;semi8&amp;comma0.00&amp;semi100&amp;comma0.00&amp;under3&amp;comma112.11&amp;semi2&amp;comma0.00&amp;semi1&amp;comma114.61&amp;semi7&amp;comma0.00&amp;semi6&amp;comma0.00&amp;semi5&amp;comma0.00&amp;semi4&amp;comma0.00&amp;semi9&amp;comma111.78&amp;semi8&amp;comma0.00&amp;semi100&amp;comma0.00`pos商户4&amp;comma115.11&amp;semipos商户4&amp;comma114.11&amp;semi商户1&amp;comma113.11&amp;under商户1&amp;comma335.33&amp;semipos商户4&amp;comma229.22&amp;semipos商户3&amp;comma112.11`201412&amp;comma0.00&amp;semi201501&amp;comma0.00&amp;semi201502&amp;comma0.00&amp;semi201503&amp;comma0.00&amp;semi201504&amp;comma0.00&amp;semi201505&amp;comma0.00&amp;semi201506&amp;comma0.00&amp;semi201507&amp;comma0.00&amp;semi201508&amp;comma0.00&amp;semi201509&amp;comma0.00&amp;semi201510&amp;comma676.66&amp;semi201511&amp;comma676.66`440&amp;under3&amp;comma112.11&amp;semi2&amp;comma0.00&amp;semi1&amp;comma229.22&amp;semi7&amp;comma0.00&amp;semi6&amp;comma0.00&amp;semi5&amp;comma0.00&amp;semi4&amp;comma0.00&amp;semi9&amp;comma335.33&amp;semi8&amp;comma0.00&amp;semi100&amp;comma0.00&amp;under3&amp;comma112.11&amp;semi2&amp;comma0.00&amp;semi1&amp;comma229.22&amp;semi7&amp;comma0.00&amp;semi6&amp;comma0.00&amp;semi5&amp;comma0.00&amp;semi4&amp;comma0.00&amp;semi9&amp;comma335.33&amp;semi8&amp;comma0.00&amp;semi100&amp;comma0.00`440&amp;under3&amp;comma112.11&amp;semi2&amp;comma0.00&amp;semi1&amp;comma114.61&amp;semi7&amp;comma0.00&amp;semi6&amp;comma0.00&amp;semi5&amp;comma0.00&amp;semi4&amp;comma0.00&amp;semi9&amp;comma111.78&amp;semi8&amp;comma0.00&amp;semi100&amp;comma0.00&amp;under3&amp;comma112.11&amp;semi2&amp;comma0.00&amp;semi1&amp;comma114.61&amp;semi7&amp;comma0.00&amp;semi6&amp;comma0.00&amp;semi5&amp;comma0.00&amp;semi4&amp;comma0.00&amp;semi9&amp;comma111.78&amp;semi8&amp;comma0.00&amp;semi100&amp;comma0.00``sameage_like：pos商户3、pos商户4、商户1</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="myProvince" id="2472">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">aaa</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="script" id="1765"/>
    </data-sources>
    <data-sets>
        <script-data-set name="topSum" id="2064">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">0</property>
                    <property name="name">shopName</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">1</property>
                    <property name="name">shopAmount</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">shopName</property>
                </structure>
                <structure>
                    <property name="columnName">shopAmount</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">shopName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">shopAmount</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">script</property>
            <method name="open"><![CDATA[var strAll = ds_topsum;

if(strAll ==""){
	topsum_count = 0;
}else{
	topsum_arr = strAll.split("&amp;semi");
	topsum_count = topsum_arr.length;
	topsum_index = 0;
}
]]></method>
            <method name="fetch"><![CDATA[if(topsum_count>0)
{
var arr = topsum_arr[topsum_index].split("&amp;comma");

row["shopName"] = arr[0];
row["shopAmount"] = arr[1];

topsum_index++;
topsum_count--;
return true;
}
else
{
return false;
}]]></method>
        </script-data-set>
        <script-data-set name="topEach" id="2130">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">eachName</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">eachAmount</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">eachName</property>
                </structure>
                <structure>
                    <property name="columnName">eachAmount</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">eachName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">eachAmount</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">script</property>
            <method name="open"><![CDATA[var strAll = ds_topeach;

if(strAll ==""){
	topeach_count = 0;
}else{
	topeach_arr = strAll.split("&amp;semi");
	topeach_count = topeach_arr.length;
	topeach_index = 0;
}]]></method>
            <method name="fetch"><![CDATA[if(topeach_count>0)
{
var arr = topeach_arr[topeach_index].split("&amp;comma");

row["eachName"] = arr[0];
row["eachAmount"] = arr[1];

topeach_index++;
topeach_count--;
return true;
}
else
{
return false;
}


]]></method>
        </script-data-set>
        <script-data-set name="ageTotal" id="2212">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">type</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">value</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">scope</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">typeVal</property>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">type</property>
                </structure>
                <structure>
                    <property name="columnName">value</property>
                </structure>
                <structure>
                    <property name="columnName">scope</property>
                </structure>
                <structure>
                    <property name="columnName">typeVal</property>
                </structure>
            </list-property>
            <list-property name="filter"/>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">type</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">value</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">scope</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">typeVal</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">script</property>
            <method name="open"><![CDATA[var arr = ageTotal.split("&amp;under"); 
k = 0;
agetotal_arr = new Array();
agetotal_arr[0] = new Array();
agetotal_arr[1] = new Array();
agetotal_arr[2] = new Array();
agetotal_arr[3] = new Array();

              
params["myProvince"].value = TransPro(arr[0]);// 这个客户所在的省 

var individualStr = type_history.split("&amp;under")[0];
var provinceStr = arr[1];
var nationStr = arr[2];

var compositeArr = [];
compositeArr[0] = individualStr;
compositeArr[1] = provinceStr;
compositeArr[2] = nationStr;

for(var i=0; i<3; i++){
   var arr_1 = compositeArr[i].split("&amp;semi"); 

   for(var j=0; j<arr_1.length; j++){
        var arr_2 = arr_1[j].split("&amp;comma");
        
        if(findName(arr_2[0])){
            agetotal_arr[0][k] = TransType(arr_2[0]);
            agetotal_arr[1][k] = arr_2[1];   
            agetotal_arr[3][k] = arr_2[0];  

            if(i==0){agetotal_arr[2][k] = "individual";}
            else if (i==1){agetotal_arr[2][k] = "province";}
            else {agetotal_arr[2][k] = "nation";}  
            k++;
            
        }
    }
}
k--;

//for the case all the item in me/province/nation are 0, then set the dateset have 0 row
ageTotalVisible= 0;
for(var i=0; i<k+1; i++){
    if(parseFloat(agetotal_arr[1][i]) != 0){
        ageTotalVisible = 1;
    }
}
//end

]]></method>
            <method name="fetch"><![CDATA[if(k>=0)
{
row["type"]= agetotal_arr[0][k];
row["value"]= agetotal_arr[1][k];
row["scope"]= agetotal_arr[2][k];
row["typeVal"]= agetotal_arr[3][k];
k--;
return true;
}
else
{
return false;
}
]]></method>
        </script-data-set>
        <script-data-set name="ageAve" id="2342">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">type</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">value</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">scope</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">typeVal</property>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">type</property>
                </structure>
                <structure>
                    <property name="columnName">value</property>
                </structure>
                <structure>
                    <property name="columnName">scope</property>
                </structure>
                <structure>
                    <property name="columnName">typeVal</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">type</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">value</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">scope</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">typeVal</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">script</property>
            <method name="open"><![CDATA[var arr = ageAve.split("&amp;under"); 
m = 0;
ageAve_arr = new Array();
ageAve_arr[0] = new Array();
ageAve_arr[1] = new Array();
ageAve_arr[2] = new Array();
ageAve_arr[3] = new Array();

var individualStr = type_history.split("&amp;under")[3];
var provinceStr = arr[1];
var nationStr = arr[2];

var compositeArr = [];
compositeArr[0] = individualStr;
compositeArr[1] = provinceStr;
compositeArr[2] = nationStr;


for(var i=0; i<3; i++){
   
   var arr_1 = compositeArr[i].split("&amp;semi"); 

   for(var j=0; j<arr_1.length; j++){
    var arr_2 = arr_1[j].split("&amp;comma");

    if(findName(arr_2[arr_2.length-2])){
        ageAve_arr[0][m] = TransType(arr_2[0]);   
        ageAve_arr[1][m] = parseInt(arr_2[1]);
        ageAve_arr[3][m] = arr_2[0];

        if(i==0){ageAve_arr[2][m] = "individual";}
        else if (i==1){ageAve_arr[2][m] = "province";}
        else {ageAve_arr[2][m] = "nation";}
        
        m++;
    }
}
}

m--;

//for the case all the item in me/province/nation are 0, then set the dateset have 0 row
ageAveVisible= 0;
for(var i=0; i<m+1; i++){
    if(parseFloat(ageAve_arr[1][i]) != 0){
        ageAveVisible = 1;
    }
}
//end
]]></method>
            <method name="fetch"><![CDATA[if(m>=0)
{
row["type"]= ageAve_arr[0][m];
row["value"]= ageAve_arr[1][m];
row["scope"]= ageAve_arr[2][m];
row["typeVal"]= ageAve_arr[3][m];
m--;
return true;
}
else
{
return false;
}
]]></method>
        </script-data-set>
        <script-data-set name="tpyeHistory" id="2365">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">period</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">type</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">typeVal</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">value</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">period</property>
                </structure>
                <structure>
                    <property name="columnName">type</property>
                </structure>
                <structure>
                    <property name="columnName">typeVal</property>
                </structure>
                <structure>
                    <property name="columnName">value</property>
                </structure>
            </list-property>
            <list-property name="filter"/>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">period</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">type</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">typeVal</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">value</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">script</property>
            <method name="open"><![CDATA[var arr = type_history.split("&amp;under"); 
n = 0;
his_arr = new Array();
his_arr[0] = new Array();
his_arr[1] = new Array();
his_arr[2] = new Array();
his_arr[3] = new Array();

var compositeArr =[];
compositeArr[0] = arr[0];
compositeArr[1] = arr[3];  //上个月

for(var i=0; i<2; i++){
   
   var arr_1 = compositeArr[i].split("&amp;semi"); 

 for(var j=0; j<arr_1.length; j++){
    var arr_2 = arr_1[j].split("&amp;comma");
    
    his_arr[0][n] = (i==0)?"now":"history";   
    his_arr[1][n] = TransType(arr_2[0]);  
    his_arr[2][n] = arr_2[0];      
    his_arr[3][n] = arr_2[1];        
    n++;
  }
}

n--;

historyCompareVisible = 0;
for(var i = 0; i < n+1; i++){   // for the case all the item's value and their hisrtory are 0, then display a string in the chart's position    
    if(parseFloat(his_arr[3][i]) != 0){
        historyCompareVisible = 1;
    }
}


]]></method>
            <method name="fetch"><![CDATA[if(n>=0)
{
row["period"]= his_arr[0][n];
row["type"]= his_arr[1][n];
row["typeVal"]= his_arr[2][n];
row["value"]= his_arr[3][n];
n--;
return true;
}
else
{
return false;
}
]]></method>
        </script-data-set>
        <script-data-set name="month" id="2389">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">month</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">value</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">dateLable</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">month</property>
                </structure>
                <structure>
                    <property name="columnName">value</property>
                </structure>
                <structure>
                    <property name="columnName">dateLable</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">month</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">value</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">dateLable</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">script</property>
            <method name="open"><![CDATA[var strAll = month_data;

month_arr = strAll.split("&amp;semi");
month_count = month_arr.length;
month_index = 6;

monthVisible= 0; // hide the chart when all month's data ==0
]]></method>
            <method name="fetch"><![CDATA[if(month_count>6) //只取6个月份的数据
{
    var arr = month_arr[month_index].split("&amp;comma");    

    row["dateLable"] = arr[0]; // use this column to sort chart's x axis

    var m ;
    m =arr[0].substr(4,2);
    if(m.substr(0,1)=="0"){m = m.substr(1,1);}

    row["month"] = m + "月";
    row["value"] = arr[1];

    if(parseFloat(row["value"]) != 0){monthVisible = 1;}  // hide the chart when all month's data ==0
    month_index++;
    month_count--;
    return true;
}
else
{
    return false;
}

]]></method>
        </script-data-set>
        <script-data-set name="pie" id="3514">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">CardID</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">CardType</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">CardAmount</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">CardPercentile</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">CardName</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CardFullID</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">CardFullIDStar</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">CardID</property>
                </structure>
                <structure>
                    <property name="columnName">CardType</property>
                </structure>
                <structure>
                    <property name="columnName">CardAmount</property>
                </structure>
                <structure>
                    <property name="columnName">CardPercentile</property>
                </structure>
                <structure>
                    <property name="columnName">CardName</property>
                </structure>
                <structure>
                    <property name="columnName">CardFullID</property>
                </structure>
                <structure>
                    <property name="columnName">CardFullIDStar</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">CardID</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">CardType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">CardAmount</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">CardPercentile</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">CardName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CardFullID</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">CardFullIDStar</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">script</property>
            <method name="open"><![CDATA[var strAll = str_pie;

arr = strAll.split("&amp;semi");
count = arr.length - 4;  
index = 4;            

UserName =  arr[0]; 
UserID = arr[1];   
UserAmount =  parseFloat(arr[2]);
UserPercentile =  arr[3];
]]></method>
            <method name="fetch"><![CDATA[if(count>0)
{
var arr2 = arr[index].split("&amp;comma");

row["CardID"] = "***" + arr2[0].substr(-4,4);
row["CardFullID"]=arr2[0];
row["CardFullIDStar"]=arr2[0].substr(0,4) + "********" +arr2[0].substr(-4,4) ;

var ct = arr2[1];
ct = TransCard(ct);

row["CardType"] = ct;
row["CardName"] = row["CardType"]+row["CardID"] ;

if(arr2.length == 2){
    row["CardAmount"] = 0.001;
    row["CardPercentile"] = 0.001;
}else{
    row["CardAmount"] = arr2[2];
    row["CardPercentile"] = arr2[3];
}

index++;
count--;
return true;
}
else
{
return false;
}]]></method>
        </script-data-set>
    </data-sets>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">sans-serif</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="crosstab-cell" id="5">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="crosstab" id="6">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="NewSimpleMasterPage" id="900">
            <property name="topMargin">0in</property>
            <property name="leftMargin">0in</property>
            <property name="bottomMargin">0.25in</property>
            <property name="rightMargin">0in</property>
            <property name="headerHeight">0in</property>
            <page-footer>
                <grid id="2887">
                    <property name="backgroundColor">#CDE3F8</property>
                    <column id="2888"/>
                    <row id="2889">
                        <property name="height">0.3in</property>
                        <cell id="2890">
                            <property name="verticalAlign">middle</property>
                            <label id="2891">
                                <property name="backgroundAttachment">scroll</property>
                                <property name="backgroundPositionX">0%</property>
                                <property name="backgroundPositionY">0%</property>
                                <property name="backgroundRepeat">repeat</property>
                                <property name="fontFamily">"宋体"</property>
                                <property name="fontSize">10pt</property>
                                <property name="fontWeight">normal</property>
                                <property name="fontStyle">normal</property>
                                <property name="fontVariant">normal</property>
                                <property name="color">black</property>
                                <property name="textLineThrough">none</property>
                                <property name="textOverline">none</property>
                                <property name="textUnderline">none</property>
                                <property name="borderBottomColor">black</property>
                                <property name="borderBottomStyle">none</property>
                                <property name="borderBottomWidth">medium</property>
                                <property name="borderLeftColor">black</property>
                                <property name="borderLeftStyle">none</property>
                                <property name="borderLeftWidth">medium</property>
                                <property name="borderRightColor">black</property>
                                <property name="borderRightStyle">none</property>
                                <property name="borderRightWidth">medium</property>
                                <property name="borderTopColor">black</property>
                                <property name="borderTopStyle">none</property>
                                <property name="borderTopWidth">medium</property>
                                <property name="marginTop">0pt</property>
                                <property name="marginLeft">0pt</property>
                                <property name="marginBottom">0pt</property>
                                <property name="marginRight">0pt</property>
                                <property name="paddingTop">1pt</property>
                                <property name="paddingLeft">1pt</property>
                                <property name="paddingBottom">1pt</property>
                                <property name="paddingRight">1pt</property>
                                <property name="textAlign">center</property>
                                <property name="letterSpacing">normal</property>
                                <property name="lineHeight">normal</property>
                                <property name="orphans">2</property>
                                <property name="textTransform">none</property>
                                <property name="whiteSpace">normal</property>
                                <property name="widows">2</property>
                                <property name="wordSpacing">normal</property>
                                <property name="display">block</property>
                                <property name="pageBreakAfter">auto</property>
                                <property name="pageBreakBefore">auto</property>
                                <property name="pageBreakInside">auto</property>
                                <property name="showIfBlank">false</property>
                                <property name="canShrink">false</property>
                                <property name="overflow">hidden</property>
                                <text-property name="text">以上内容仅供参考</text-property>
                            </label>
                        </cell>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <data id="3513">
            <property name="backgroundColor">#FFFF80</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">true</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">imageURL</property>
                    <expression name="expression" type="javascript">baseURL = "http://www.800os.com/pc/images/";</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
            <property name="resultSetColumn">imageURL</property>
        </data>
        <text id="3512">
            <property name="backgroundColor">#FFFF80</property>
            <property name="contentType">html</property>
            <text-property name="content"><![CDATA[<!--[if lt IE 9]>
      <script src="http://localhost:8080/jessiejs/pc/js/lib/html5shiv.min.js"></script>
      <script src="http://localhost:8080/jessiejs/pc/js/lib/respond.min.js"></script>
<![endif]-->

<script src="http://localhost:8080/jessiejs/pc/js/require.js"></script>
<script src="http://localhost:8080/jessiejs/pc/js/htmlitem.js"></script>
<script src="http://localhost:8080/jessiejs/pc/js/lib/jquery/jquery.min.js"></script>

<script>
;(function(){
	require.config({
		baseUrl: "http://localhost:8080/jessiejs/pc/js/",
		paths: {
			"jquery": "lib/jquery/jquery.min",
			"cssPath": "../css"
		},
		waitSeconds: 15,
		map: {
		    '*': {
		         'css': 'lib/css.min'
		     }
		}
	});
})();
</script>]]></text-property>
        </text>
        <label id="2915">
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">true</expression>
                </structure>
            </list-property>
            <method name="onCreate"><![CDATA[strTotal = params["key"].value;

var arr = strTotal.split("\`");

str_pie = arr[0];
type_history = arr[1];
ds_top = arr[2];
month_data= arr[3];
ageTotal= arr[4];
ageAve= arr[5];
result_summary= arr[6];
result_suggestion= arr[7];

if(ds_top ==""){
    ds_topsum="";
    ds_topeach="";
}else{
    var arr2 = ds_top.split("&amp;under"); 
    ds_topsum = arr2[1];
    ds_topeach= arr2[0];
}

topItemCode = []; 

function FindTopItems(){
    var topItemCode = []; 
    var arr = type_history.split("&amp;under");
    var arr2 = ageTotal.split("&amp;under");

    var arrMe = arr[0].split("&amp;semi");
    var arrHistory = arr[1].split("&amp;semi"); 
    var arrOthers = arr2[2].split("&amp;semi"); 

    var meItem = [];
    var meValue = [];
    var historyItem = [];
    var historyValue = [];
    var othersItem = [];
    var othersValue = [];

    for(var i=0; i<arrMe.length; i++){
        var a = arrMe[i].split("&amp;comma");
        var b = arrHistory[i].split("&amp;comma");
        var c = arrOthers[i].split("&amp;comma");
        meItem.push(a[0]);
        meValue.push(parseFloat(a[1]));
        historyItem.push(b[0]);
        historyValue.push(parseFloat(b[1]));
        if(c[0] !="4"){   //去掉房汽
            othersItem.push(c[0]);
            othersValue.push(parseFloat(c[1]));
        }

    }

    var meItemSort = SortValuesItems(meValue, meItem);
    var historyItemSort = SortValuesItems(historyValue, historyItem);
    var othersItemSort = SortValuesItems(othersValue, othersItem);
    

    for(var i = 0; i<(meItemSort.length <5?meItemSort.length:5); i++){
        if(meValue.sort(desc)[i] !=0){
            topItemCode.push(meItemSort[i]);
        }
    }

    if(topItemCode.length < 5){   // if length <5, then add the history's item
        var n =0;
             for(var i = 0; i < historyItemSort.length &amp;&amp; topItemCode.length<5; i++){
                var a = historyItemSort[i];
                if(historyValue.sort(desc)[i] !=0 &amp;&amp; topItemCode.indexOf(a,0) < 0){
                    topItemCode.push(a);
                    n++
                }
                
            }
    }

    if(topItemCode.length < 5){   // if length <5, then add the nation's item
            for(var i = 0; i < othersItemSort.length &amp;&amp; topItemCode.length<5; i++){
                var a = othersItemSort[i];
                if(othersValue.sort(desc)[i] !=0 &amp;&amp; topItemCode.indexOf(a,0) < 0){
                    topItemCode.push(a);                   
                }
            }      
    }
    return topItemCode;
}

topItemCode = FindTopItems();

]]></method>
            <text-property name="text">testkey</text-property>
        </label>
        <grid id="2857">
            <column id="2897">
                <property name="width">0.75in</property>
            </column>
            <column id="2859"/>
            <column id="2895">
                <property name="width">0.75in</property>
            </column>
            <row id="2861">
                <cell id="2896">
                    <property name="backgroundColor">#CDE3F8</property>
                    <property name="paddingTop">0pt</property>
                    <property name="paddingLeft">0pt</property>
                    <property name="paddingBottom">0pt</property>
                    <property name="paddingRight">0pt</property>
                </cell>
                <cell id="2863">
                    <property name="paddingTop">0pt</property>
                    <property name="paddingLeft">0pt</property>
                    <property name="paddingBottom">0pt</property>
                    <property name="paddingRight">0pt</property>
                    <table id="3515">
                        <property name="dataSet">pie</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">true</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">CardID</property>
                                <text-property name="displayName">CardID</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardID"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">CardType</property>
                                <text-property name="displayName">CardType</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardType"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">CardAmount</property>
                                <text-property name="displayName">CardAmount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardAmount"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CardPercentile</property>
                                <text-property name="displayName">CardPercentile</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardPercentile"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CardName</property>
                                <text-property name="displayName">CardName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">CardFullID</property>
                                <text-property name="displayName">CardFullID</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardFullID"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">CardFullIDStar</property>
                                <text-property name="displayName">CardFullIDStar</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardFullIDStar"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <column id="3554"/>
                        <column id="3555"/>
                        <column id="3556"/>
                        <column id="3557"/>
                        <column id="3558"/>
                        <column id="3559"/>
                        <column id="3560"/>
                        <header>
                            <row id="3516">
                                <cell id="3517">
                                    <label id="3518">
                                        <text-property name="text">CardID</text-property>
                                    </label>
                                </cell>
                                <cell id="3519">
                                    <label id="3520">
                                        <text-property name="text">CardType</text-property>
                                    </label>
                                </cell>
                                <cell id="3521">
                                    <label id="3522">
                                        <text-property name="text">CardAmount</text-property>
                                    </label>
                                </cell>
                                <cell id="3523">
                                    <label id="3524">
                                        <text-property name="text">CardPercentile</text-property>
                                    </label>
                                </cell>
                                <cell id="3525">
                                    <label id="3526">
                                        <text-property name="text">CardName</text-property>
                                    </label>
                                </cell>
                                <cell id="3527">
                                    <label id="3528">
                                        <text-property name="text">CardFullID</text-property>
                                    </label>
                                </cell>
                                <cell id="3529">
                                    <label id="3530">
                                        <text-property name="text">CardFullIDStar</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="3531">
                                <cell id="3532">
                                    <data id="3533">
                                        <property name="resultSetColumn">CardID</property>
                                    </data>
                                </cell>
                                <cell id="3534">
                                    <data id="3535">
                                        <property name="resultSetColumn">CardType</property>
                                    </data>
                                </cell>
                                <cell id="3536">
                                    <data id="3537">
                                        <property name="resultSetColumn">CardAmount</property>
                                    </data>
                                </cell>
                                <cell id="3538">
                                    <data id="3539">
                                        <property name="resultSetColumn">CardPercentile</property>
                                    </data>
                                </cell>
                                <cell id="3540">
                                    <data id="3541">
                                        <property name="resultSetColumn">CardName</property>
                                    </data>
                                </cell>
                                <cell id="3542">
                                    <data id="3543">
                                        <property name="resultSetColumn">CardFullID</property>
                                    </data>
                                </cell>
                                <cell id="3544">
                                    <data id="3545">
                                        <property name="resultSetColumn">CardFullIDStar</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="3546">
                                <cell id="3547"/>
                                <cell id="3548"/>
                                <cell id="3549"/>
                                <cell id="3550"/>
                                <cell id="3551"/>
                                <cell id="3552"/>
                                <cell id="3553"/>
                            </row>
                        </footer>
                    </table>
                    <table id="2114">
                        <property name="dataSet">topSum</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">true</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">shopName</property>
                                <text-property name="displayName">shopName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["shopName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">shopAmount</property>
                                <text-property name="displayName">shopAmount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["shopAmount"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2128"/>
                        <column id="2129"/>
                        <header>
                            <row id="2115">
                                <cell id="2116">
                                    <label id="2117">
                                        <text-property name="text">shopName</text-property>
                                    </label>
                                </cell>
                                <cell id="2118">
                                    <label id="2119">
                                        <text-property name="text">shopAmount</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2120">
                                <cell id="2121">
                                    <data id="2122">
                                        <property name="resultSetColumn">shopName</property>
                                    </data>
                                </cell>
                                <cell id="2123">
                                    <data id="2124">
                                        <property name="resultSetColumn">shopAmount</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2125">
                                <cell id="2126"/>
                                <cell id="2127"/>
                            </row>
                        </footer>
                    </table>
                    <table id="2179">
                        <property name="dataSet">topEach</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">true</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">eachName</property>
                                <text-property name="displayName">eachName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["eachName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">eachAmount</property>
                                <text-property name="displayName">eachAmount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["eachAmount"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2193"/>
                        <column id="2194"/>
                        <header>
                            <row id="2180">
                                <cell id="2181">
                                    <label id="2182">
                                        <text-property name="text">eachName</text-property>
                                    </label>
                                </cell>
                                <cell id="2183">
                                    <label id="2184">
                                        <text-property name="text">eachAmount</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2185">
                                <cell id="2186">
                                    <data id="2187">
                                        <property name="resultSetColumn">eachName</property>
                                    </data>
                                </cell>
                                <cell id="2188">
                                    <data id="2189">
                                        <property name="resultSetColumn">eachAmount</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2190">
                                <cell id="2191"/>
                                <cell id="2192"/>
                            </row>
                        </footer>
                    </table>
                    <table id="2257">
                        <property name="dataSet">ageTotal</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">true</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">type</property>
                                <text-property name="displayName">type</text-property>
                                <expression name="expression" type="javascript">dataSetRow["type"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">value</property>
                                <text-property name="displayName">value</text-property>
                                <expression name="expression" type="javascript">dataSetRow["value"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">scope</property>
                                <text-property name="displayName">scope</text-property>
                                <expression name="expression" type="javascript">dataSetRow["scope"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <column id="2276"/>
                        <column id="2277"/>
                        <column id="2278"/>
                        <header>
                            <row id="2258">
                                <cell id="2259">
                                    <label id="2260">
                                        <text-property name="text">type</text-property>
                                    </label>
                                </cell>
                                <cell id="2261">
                                    <label id="2262">
                                        <text-property name="text">value</text-property>
                                    </label>
                                </cell>
                                <cell id="2263">
                                    <label id="2264">
                                        <text-property name="text">scope</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2265">
                                <cell id="2266">
                                    <data id="2267">
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="borderLeftStyle">solid</property>
                                        <property name="borderLeftWidth">thin</property>
                                        <property name="borderRightStyle">solid</property>
                                        <property name="borderRightWidth">thin</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">thin</property>
                                        <property name="resultSetColumn">type</property>
                                    </data>
                                </cell>
                                <cell id="2268">
                                    <data id="2269">
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="borderLeftStyle">solid</property>
                                        <property name="borderLeftWidth">thin</property>
                                        <property name="borderRightStyle">solid</property>
                                        <property name="borderRightWidth">thin</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">thin</property>
                                        <property name="resultSetColumn">value</property>
                                    </data>
                                </cell>
                                <cell id="2270">
                                    <data id="2271">
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="borderLeftStyle">solid</property>
                                        <property name="borderLeftWidth">thin</property>
                                        <property name="borderRightStyle">solid</property>
                                        <property name="borderRightWidth">thin</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">thin</property>
                                        <property name="resultSetColumn">scope</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2272">
                                <cell id="2273"/>
                                <cell id="2274"/>
                                <cell id="2275"/>
                            </row>
                        </footer>
                    </table>
                    <table id="2343">
                        <property name="dataSet">ageAve</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">true</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">type</property>
                                <text-property name="displayName">type</text-property>
                                <expression name="expression" type="javascript">dataSetRow["type"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">value</property>
                                <text-property name="displayName">value</text-property>
                                <expression name="expression" type="javascript">dataSetRow["value"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">scope</property>
                                <text-property name="displayName">scope</text-property>
                                <expression name="expression" type="javascript">dataSetRow["scope"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <list-property name="sort">
                            <structure>
                                <expression name="key" type="javascript">row["type"]</expression>
                                <property name="direction">asc</property>
                                <property name="strength">-1</property>
                            </structure>
                        </list-property>
                        <column id="2362"/>
                        <column id="2363"/>
                        <column id="2364"/>
                        <header>
                            <row id="2344">
                                <cell id="2345">
                                    <label id="2346">
                                        <text-property name="text">type</text-property>
                                    </label>
                                </cell>
                                <cell id="2347">
                                    <label id="2348">
                                        <text-property name="text">value</text-property>
                                    </label>
                                </cell>
                                <cell id="2349">
                                    <label id="2350">
                                        <text-property name="text">scope</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2351">
                                <cell id="2352">
                                    <data id="2353">
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="borderLeftStyle">solid</property>
                                        <property name="borderLeftWidth">thin</property>
                                        <property name="borderRightStyle">solid</property>
                                        <property name="borderRightWidth">thin</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">thin</property>
                                        <property name="resultSetColumn">type</property>
                                    </data>
                                </cell>
                                <cell id="2354">
                                    <data id="2355">
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="borderLeftStyle">solid</property>
                                        <property name="borderLeftWidth">thin</property>
                                        <property name="borderRightStyle">solid</property>
                                        <property name="borderRightWidth">thin</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">thin</property>
                                        <property name="resultSetColumn">value</property>
                                    </data>
                                </cell>
                                <cell id="2356">
                                    <data id="2357">
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="borderLeftStyle">solid</property>
                                        <property name="borderLeftWidth">thin</property>
                                        <property name="borderRightStyle">solid</property>
                                        <property name="borderRightWidth">thin</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">thin</property>
                                        <property name="resultSetColumn">scope</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2358">
                                <cell id="2359"/>
                                <cell id="2360"/>
                                <cell id="2361"/>
                            </row>
                        </footer>
                    </table>
                    <table id="2366">
                        <property name="dataSet">tpyeHistory</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">true</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">type</property>
                                <text-property name="displayName">type</text-property>
                                <expression name="expression" type="javascript">dataSetRow["type"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">value</property>
                                <text-property name="displayName">value</text-property>
                                <expression name="expression" type="javascript">dataSetRow["value"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">period</property>
                                <text-property name="displayName">period</text-property>
                                <expression name="expression" type="javascript">dataSetRow["period"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <column id="2385"/>
                        <column id="2386"/>
                        <column id="2387"/>
                        <header>
                            <row id="2367">
                                <cell id="2368">
                                    <label id="2369">
                                        <text-property name="text">type</text-property>
                                    </label>
                                </cell>
                                <cell id="2370">
                                    <label id="2371">
                                        <text-property name="text">value</text-property>
                                    </label>
                                </cell>
                                <cell id="2372">
                                    <label id="2373">
                                        <text-property name="text">period</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2374">
                                <cell id="2375">
                                    <data id="2376">
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="borderLeftStyle">solid</property>
                                        <property name="borderLeftWidth">thin</property>
                                        <property name="borderRightStyle">solid</property>
                                        <property name="borderRightWidth">thin</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">thin</property>
                                        <property name="resultSetColumn">type</property>
                                    </data>
                                </cell>
                                <cell id="2377">
                                    <data id="2378">
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="borderLeftStyle">solid</property>
                                        <property name="borderLeftWidth">thin</property>
                                        <property name="borderRightStyle">solid</property>
                                        <property name="borderRightWidth">thin</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">thin</property>
                                        <property name="resultSetColumn">value</property>
                                    </data>
                                </cell>
                                <cell id="2379">
                                    <data id="2380">
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="borderLeftStyle">solid</property>
                                        <property name="borderLeftWidth">thin</property>
                                        <property name="borderRightStyle">solid</property>
                                        <property name="borderRightWidth">thin</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">thin</property>
                                        <property name="resultSetColumn">period</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2381">
                                <cell id="2382"/>
                                <cell id="2383"/>
                                <cell id="2384"/>
                            </row>
                        </footer>
                    </table>
                    <table id="2407">
                        <property name="dataSet">month</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">true</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">month</property>
                                <text-property name="displayName">month</text-property>
                                <expression name="expression" type="javascript">dataSetRow["month"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">value</property>
                                <text-property name="displayName">value</text-property>
                                <expression name="expression" type="javascript">dataSetRow["value"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2421"/>
                        <column id="2422"/>
                        <header>
                            <row id="2408">
                                <cell id="2409">
                                    <label id="2410">
                                        <text-property name="text">month</text-property>
                                    </label>
                                </cell>
                                <cell id="2411">
                                    <label id="2412">
                                        <text-property name="text">value</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2413">
                                <cell id="2414">
                                    <data id="2415">
                                        <property name="resultSetColumn">month</property>
                                    </data>
                                </cell>
                                <cell id="2416">
                                    <data id="2417">
                                        <property name="resultSetColumn">value</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2418">
                                <cell id="2419"/>
                                <cell id="2420"/>
                            </row>
                        </footer>
                    </table>
                    <grid id="9">
                        <property name="height">0.6458333333333334in</property>
                        <property name="width">6.96875in</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">Column Binding</property>
                                <expression name="expression" type="javascript">BirtDateTime.now()</expression>
                                <property name="dataType">date-time</property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <column id="10">
                            <property name="width">3.1145833333333335in</property>
                        </column>
                        <column id="17">
                            <property name="width">3.8541666666666665in</property>
                        </column>
                        <row id="12">
                            <property name="height">0.6458333333333334in</property>
                            <cell id="13">
                                <property name="verticalAlign">bottom</property>
                                <image id="2911">
                                    <property name="marginLeft">5pt</property>
                                    <property name="source">url</property>
                                    <expression name="uri" type="javascript">baseURL+"logo.png"</expression>
                                </image>
                            </cell>
                            <cell id="16">
                                <data id="2506">
                                    <property name="backgroundAttachment">scroll</property>
                                    <property name="backgroundPositionX">0%</property>
                                    <property name="backgroundPositionY">0%</property>
                                    <property name="backgroundRepeat">repeat</property>
                                    <property name="fontFamily">"微软雅黑"</property>
                                    <property name="fontSize">12pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="fontStyle">normal</property>
                                    <property name="fontVariant">normal</property>
                                    <property name="color">gray</property>
                                    <property name="textLineThrough">none</property>
                                    <property name="textOverline">none</property>
                                    <property name="textUnderline">none</property>
                                    <property name="borderBottomColor">black</property>
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderBottomWidth">medium</property>
                                    <property name="borderLeftColor">black</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderLeftWidth">medium</property>
                                    <property name="borderRightColor">black</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderRightWidth">medium</property>
                                    <property name="borderTopColor">black</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="borderTopWidth">medium</property>
                                    <property name="marginTop">20pt</property>
                                    <property name="marginLeft">0pt</property>
                                    <property name="marginBottom">0pt</property>
                                    <property name="marginRight">5pt</property>
                                    <property name="paddingTop">1pt</property>
                                    <property name="paddingLeft">1pt</property>
                                    <property name="paddingBottom">1pt</property>
                                    <property name="paddingRight">1pt</property>
                                    <structure name="dateTimeFormat">
                                        <property name="category">Unformatted</property>
                                        <property name="locale">zh_Hans</property>
                                    </structure>
                                    <property name="textAlign">right</property>
                                    <property name="letterSpacing">normal</property>
                                    <property name="lineHeight">normal</property>
                                    <property name="orphans">2</property>
                                    <property name="textTransform">none</property>
                                    <property name="whiteSpace">normal</property>
                                    <property name="widows">2</property>
                                    <property name="wordSpacing">normal</property>
                                    <property name="display">block</property>
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <property name="pageBreakInside">auto</property>
                                    <property name="showIfBlank">false</property>
                                    <property name="canShrink">false</property>
                                    <property name="overflow">hidden</property>
                                    <property name="resultSetColumn">Column Binding</property>
                                </data>
                            </cell>
                        </row>
                    </grid>
                    <text id="2917">
                        <property name="display">none</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<script>  
function sort(values,valueIndex){  //根据valueIndex列的值排序values,逆序
    var len = values.length ;
    for(var i=0 ;i<len-1 ;i++){
        var minIndex = i ;
        for(var j=i+1;j<len ;j++){
            if(values[j][valueIndex]>values[minIndex][valueIndex]){
                minIndex = j ;
            }
        }
        if(minIndex!=i){
            var tmp = values[i] ;
            values[i] = values[minIndex] ;
            values[minIndex] = tmp ;
        }
    } 
    return values ;
}

function Map(){
  this.container = new Object();
}
Map.prototype.put = function(key, value){
  this.container[key] = value;
}
Map.prototype.get = function(key){
   return this.container[key];
}
var vtmap = new Map();
vtmap.put(1,'娱乐');
vtmap.put(2,'餐饮');
vtmap.put(3,'医教');
vtmap.put(4,'房汽');
vtmap.put(5,'出行');
vtmap.put(6,'购物');
vtmap.put(7,'网购');
vtmap.put(8,'理财');
vtmap.put(9,'居家');
vtmap.put(100,'其他');

function valueToType(value){
    return vtmap.get(parseInt(value));
}

function arrayIndexOf(array, val) {
    for(var i = 0, len = array.length; i < len; i++) {
        if(array[i] === val) {
            return i;
        }
    }

    return -1;
}

function initDataGroup(legends) {
    var values = [];
    for(var i = 0, len = legends.length; i < len; i++) {
        values.push({
            name: legends[i],
            value: 0
        });
    }

    return values;
}

function updateDataGroup(legends, values, name, value) {
    var index = arrayIndexOf(legends, name);
    if(index >= 0) {
        values[index].value += value;
    }
}


function getAnalyticsCts() {
    var values = '<VALUE-OF>topItemCode.toString()</VALUE-OF>';
    values = (values) ? values.split(',') : [];

    for(var i=0;i<values.length;i++){
        values[i] = parseInt(values[i]);
    }
    
    values.sort(ascfront);
    var types = [] ;
    for(var i=0 ;i<values.length;i++){
     types.push(valueToType(values[i]));
 }
 return types;
}

function descfront(x,y){  
   if (x > y)    
       return -1;  
   if (x < y)            
       return 1;  
}  

function ascfront(x,y){  
   if (x > y)    
       return 1;  
   if (x < y)            
       return -1;  
}  

function findNamefront(x){
   for(var i=0; i<topItemCode.length; i++){
       if(x == topItemCode[i]){return true;}       
   }
   return false;
}

function SortValuesItemsfront(values, items){    
    var values2 = [];
    var items2 = [];
    var copied = new Array();
    values2 = values.slice(0);
    values2.sort(descfront);
    for(var i = 0; i<values2.length; i++){            
        for(var j = 0; j<values.length; j++){
            if (values2[i] == values[j] &amp;&amp; copied[j]!=1){            
                items2.push(items[j]);
                copied[j]=1;
                break;          
            }
        }            
    }
    return items2;
}
</script>  ]]></text-property>
                    </text>
                    <grid id="1670">
                        <property name="backgroundColor">#CDE3F8</property>
                        <property name="borderBottomStyle">none</property>
                        <property name="borderLeftStyle">none</property>
                        <property name="borderRightStyle">none</property>
                        <property name="borderTopStyle">none</property>
                        <property name="marginTop">10pt</property>
                        <property name="marginLeft">0pt</property>
                        <property name="marginBottom">0pt</property>
                        <property name="textAlign">center</property>
                        <property name="height">0.583%</property>
                        <property name="width">7in</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">UserName</property>
                                <expression name="expression" type="javascript">UserName</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">UserAmount</property>
                                <expression name="expression" type="javascript">UserAmount</expression>
                                <property name="dataType">decimal</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">UP</property>
                                <expression name="expression" type="javascript">UserPercentile</expression>
                                <property name="dataType">decimal</property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <column id="2813">
                            <property name="width">20pt</property>
                        </column>
                        <column id="1671">
                            <property name="width">0.9479166666666666in</property>
                        </column>
                        <column id="1672">
                            <property name="textAlign">left</property>
                            <property name="width">2.4895833333333335in</property>
                        </column>
                        <column id="2574"/>
                        <column id="2578">
                            <property name="width">0.9375in</property>
                        </column>
                        <column id="1673">
                            <property name="width">1.84375in</property>
                        </column>
                        <row id="1687">
                            <property name="height">0.28in</property>
                            <cell id="2811"/>
                            <cell id="1688">
                                <label id="1682">
                                    <property name="fontFamily">"微软雅黑"</property>
                                    <property name="fontSize">11pt</property>
                                    <property name="color">#0073DC</property>
                                    <property name="textAlign">left</property>
                                    <text-property name="text">客户姓名 ：</text-property>
                                </label>
                            </cell>
                            <cell id="1689">
                                <data id="1891">
                                    <property name="backgroundAttachment">scroll</property>
                                    <property name="backgroundPositionX">0%</property>
                                    <property name="backgroundPositionY">0%</property>
                                    <property name="backgroundRepeat">repeat</property>
                                    <property name="fontFamily">"微软雅黑"</property>
                                    <property name="fontSize">11pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="fontStyle">normal</property>
                                    <property name="fontVariant">normal</property>
                                    <property name="color">#0073DC</property>
                                    <property name="textLineThrough">none</property>
                                    <property name="textOverline">none</property>
                                    <property name="textUnderline">none</property>
                                    <property name="borderBottomColor">black</property>
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderBottomWidth">medium</property>
                                    <property name="borderLeftColor">black</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderLeftWidth">medium</property>
                                    <property name="borderRightColor">black</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderRightWidth">medium</property>
                                    <property name="borderTopColor">black</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="borderTopWidth">medium</property>
                                    <property name="marginTop">0pt</property>
                                    <property name="marginLeft">0pt</property>
                                    <property name="marginBottom">0pt</property>
                                    <property name="marginRight">0pt</property>
                                    <property name="paddingTop">1pt</property>
                                    <property name="paddingLeft">1pt</property>
                                    <property name="paddingBottom">1pt</property>
                                    <property name="paddingRight">1pt</property>
                                    <property name="textAlign">left</property>
                                    <property name="letterSpacing">normal</property>
                                    <property name="lineHeight">normal</property>
                                    <property name="orphans">2</property>
                                    <property name="textTransform">none</property>
                                    <property name="whiteSpace">normal</property>
                                    <property name="widows">2</property>
                                    <property name="wordSpacing">normal</property>
                                    <property name="display">block</property>
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <property name="pageBreakInside">auto</property>
                                    <property name="showIfBlank">false</property>
                                    <property name="canShrink">false</property>
                                    <property name="overflow">hidden</property>
                                    <property name="resultSetColumn">UserName</property>
                                </data>
                            </cell>
                            <cell id="2571"/>
                            <cell id="2575">
                                <label id="1693">
                                    <property name="backgroundAttachment">scroll</property>
                                    <property name="backgroundPositionX">0%</property>
                                    <property name="backgroundPositionY">0%</property>
                                    <property name="backgroundRepeat">repeat</property>
                                    <property name="fontFamily">"微软雅黑"</property>
                                    <property name="fontSize">11pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="fontStyle">normal</property>
                                    <property name="fontVariant">normal</property>
                                    <property name="color">#0073DC</property>
                                    <property name="textLineThrough">none</property>
                                    <property name="textOverline">none</property>
                                    <property name="textUnderline">none</property>
                                    <property name="borderBottomColor">black</property>
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderBottomWidth">medium</property>
                                    <property name="borderLeftColor">black</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderLeftWidth">medium</property>
                                    <property name="borderRightColor">black</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderRightWidth">medium</property>
                                    <property name="borderTopColor">black</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="borderTopWidth">medium</property>
                                    <property name="marginTop">0pt</property>
                                    <property name="marginLeft">0pt</property>
                                    <property name="marginBottom">0pt</property>
                                    <property name="marginRight">0pt</property>
                                    <property name="paddingTop">1pt</property>
                                    <property name="paddingLeft">1pt</property>
                                    <property name="paddingBottom">1pt</property>
                                    <property name="paddingRight">1pt</property>
                                    <property name="textAlign">left</property>
                                    <property name="letterSpacing">normal</property>
                                    <property name="lineHeight">normal</property>
                                    <property name="orphans">2</property>
                                    <property name="textTransform">none</property>
                                    <property name="whiteSpace">normal</property>
                                    <property name="widows">2</property>
                                    <property name="wordSpacing">normal</property>
                                    <property name="display">block</property>
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <property name="pageBreakInside">auto</property>
                                    <property name="showIfBlank">false</property>
                                    <property name="canShrink">false</property>
                                    <property name="overflow">hidden</property>
                                    <text-property name="text">账单周期 ：</text-property>
                                </label>
                            </cell>
                            <cell id="1690">
                                <text-data id="39">
                                    <property name="backgroundAttachment">scroll</property>
                                    <property name="backgroundPositionX">0%</property>
                                    <property name="backgroundPositionY">0%</property>
                                    <property name="backgroundRepeat">repeat</property>
                                    <property name="fontFamily">"微软雅黑"</property>
                                    <property name="fontSize">11pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="fontStyle">normal</property>
                                    <property name="fontVariant">normal</property>
                                    <property name="color">#0073DC</property>
                                    <property name="textLineThrough">none</property>
                                    <property name="textOverline">none</property>
                                    <property name="textUnderline">none</property>
                                    <property name="borderBottomColor">black</property>
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderBottomWidth">medium</property>
                                    <property name="borderLeftColor">black</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderLeftWidth">medium</property>
                                    <property name="borderRightColor">black</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderRightWidth">medium</property>
                                    <property name="borderTopColor">black</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="borderTopWidth">medium</property>
                                    <property name="marginTop">0pt</property>
                                    <property name="marginLeft">0pt</property>
                                    <property name="marginBottom">0pt</property>
                                    <property name="marginRight">0pt</property>
                                    <property name="paddingTop">1pt</property>
                                    <property name="paddingLeft">1pt</property>
                                    <property name="paddingBottom">1pt</property>
                                    <property name="paddingRight">1pt</property>
                                    <property name="textAlign">left</property>
                                    <property name="letterSpacing">normal</property>
                                    <property name="lineHeight">normal</property>
                                    <property name="orphans">2</property>
                                    <property name="textTransform">none</property>
                                    <property name="whiteSpace">normal</property>
                                    <property name="widows">2</property>
                                    <property name="wordSpacing">normal</property>
                                    <property name="display">block</property>
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <property name="pageBreakInside">auto</property>
                                    <property name="showIfBlank">false</property>
                                    <property name="canShrink">false</property>
                                    <property name="overflow">hidden</property>
                                    <expression name="valueExpr">var year = (params["month"].value).substr(0, 4);&#13;
var month = (params["month"].value).substr(4, 2);&#13;
IntMonth = parseInt(month,10);&#13;
var startFormat = year + "." + IntMonth + "." + "1";&#13;
var endDate = new Date(new Date(year, IntMonth,1).getTime()- 1000 * 60 * 60 * 24);&#13;
var endDay = parseInt(endDate.getDate());&#13;
period = startFormat + "  -  " + year + "." + IntMonth + "." + endDay;&#13;
(period);</expression>
                                    <property name="contentType">html</property>
                                </text-data>
                            </cell>
                        </row>
                        <row id="1676">
                            <property name="height">0.3in</property>
                            <cell id="2812">
                                <property name="borderBottomColor">#0046FF</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">1px</property>
                            </cell>
                            <cell id="1677">
                                <property name="borderBottomColor">#0046FF</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">1px</property>
                                <label id="2550">
                                    <property name="backgroundAttachment">scroll</property>
                                    <property name="backgroundPositionX">0%</property>
                                    <property name="backgroundPositionY">0%</property>
                                    <property name="backgroundRepeat">repeat</property>
                                    <property name="fontFamily">"微软雅黑"</property>
                                    <property name="fontSize">11pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="fontStyle">normal</property>
                                    <property name="fontVariant">normal</property>
                                    <property name="color">#0073DC</property>
                                    <property name="textLineThrough">none</property>
                                    <property name="textOverline">none</property>
                                    <property name="textUnderline">none</property>
                                    <property name="borderBottomColor">black</property>
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderBottomWidth">medium</property>
                                    <property name="borderLeftColor">black</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderLeftWidth">medium</property>
                                    <property name="borderRightColor">black</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderRightWidth">medium</property>
                                    <property name="borderTopColor">black</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="borderTopWidth">medium</property>
                                    <property name="marginTop">0pt</property>
                                    <property name="marginLeft">0pt</property>
                                    <property name="marginBottom">0pt</property>
                                    <property name="marginRight">0pt</property>
                                    <property name="paddingTop">1pt</property>
                                    <property name="paddingLeft">1pt</property>
                                    <property name="paddingBottom">1pt</property>
                                    <property name="paddingRight">1pt</property>
                                    <property name="textAlign">left</property>
                                    <property name="letterSpacing">normal</property>
                                    <property name="lineHeight">normal</property>
                                    <property name="orphans">2</property>
                                    <property name="textTransform">none</property>
                                    <property name="whiteSpace">normal</property>
                                    <property name="widows">2</property>
                                    <property name="wordSpacing">normal</property>
                                    <property name="display">block</property>
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <property name="pageBreakInside">auto</property>
                                    <property name="showIfBlank">false</property>
                                    <property name="canShrink">false</property>
                                    <property name="overflow">hidden</property>
                                    <text-property name="text">身份证号 ：</text-property>
                                </label>
                            </cell>
                            <cell id="1678">
                                <property name="borderBottomColor">#0046FF</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">1px</property>
                                <text-data id="2748">
                                    <property name="backgroundAttachment">scroll</property>
                                    <property name="backgroundPositionX">0%</property>
                                    <property name="backgroundPositionY">0%</property>
                                    <property name="backgroundRepeat">repeat</property>
                                    <property name="fontFamily">"微软雅黑"</property>
                                    <property name="fontSize">11pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="fontStyle">normal</property>
                                    <property name="fontVariant">normal</property>
                                    <property name="color">#0073DC</property>
                                    <property name="textLineThrough">none</property>
                                    <property name="textOverline">none</property>
                                    <property name="textUnderline">none</property>
                                    <property name="borderBottomColor">black</property>
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderBottomWidth">medium</property>
                                    <property name="borderLeftColor">black</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderLeftWidth">medium</property>
                                    <property name="borderRightColor">black</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderRightWidth">medium</property>
                                    <property name="borderTopColor">black</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="borderTopWidth">medium</property>
                                    <property name="marginTop">0pt</property>
                                    <property name="marginLeft">0pt</property>
                                    <property name="marginBottom">0pt</property>
                                    <property name="marginRight">0pt</property>
                                    <property name="paddingTop">1pt</property>
                                    <property name="paddingLeft">1pt</property>
                                    <property name="paddingBottom">1pt</property>
                                    <property name="paddingRight">1pt</property>
                                    <property name="textAlign">left</property>
                                    <property name="letterSpacing">normal</property>
                                    <property name="lineHeight">normal</property>
                                    <property name="orphans">2</property>
                                    <property name="textTransform">none</property>
                                    <property name="whiteSpace">normal</property>
                                    <property name="widows">2</property>
                                    <property name="wordSpacing">normal</property>
                                    <property name="display">block</property>
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <property name="pageBreakInside">auto</property>
                                    <property name="showIfBlank">false</property>
                                    <property name="canShrink">false</property>
                                    <property name="overflow">hidden</property>
                                    <expression name="valueExpr">var id = UserID;&#13;
var id_head = id.substr(0,3);&#13;
var id_tail = id.substr(-4,4);&#13;
id_head + "********"+ id_tail;</expression>
                                    <property name="contentType">html</property>
                                </text-data>
                            </cell>
                            <cell id="2572">
                                <property name="borderBottomColor">#0046FF</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">1px</property>
                            </cell>
                            <cell id="2576">
                                <property name="borderBottomColor">#0046FF</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">1px</property>
                                <label id="1700">
                                    <property name="backgroundAttachment">scroll</property>
                                    <property name="backgroundPositionX">0%</property>
                                    <property name="backgroundPositionY">0%</property>
                                    <property name="backgroundRepeat">repeat</property>
                                    <property name="fontFamily">"微软雅黑"</property>
                                    <property name="fontSize">11pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="fontStyle">normal</property>
                                    <property name="fontVariant">normal</property>
                                    <property name="color">#0073DC</property>
                                    <property name="textLineThrough">none</property>
                                    <property name="textOverline">none</property>
                                    <property name="textUnderline">none</property>
                                    <property name="borderBottomColor">black</property>
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderBottomWidth">medium</property>
                                    <property name="borderLeftColor">black</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderLeftWidth">medium</property>
                                    <property name="borderRightColor">black</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderRightWidth">medium</property>
                                    <property name="borderTopColor">black</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="borderTopWidth">medium</property>
                                    <property name="marginTop">0pt</property>
                                    <property name="marginLeft">0pt</property>
                                    <property name="marginBottom">0pt</property>
                                    <property name="marginRight">0pt</property>
                                    <property name="paddingTop">1pt</property>
                                    <property name="paddingLeft">1pt</property>
                                    <property name="paddingBottom">1pt</property>
                                    <property name="paddingRight">1pt</property>
                                    <property name="textAlign">left</property>
                                    <property name="letterSpacing">normal</property>
                                    <property name="lineHeight">normal</property>
                                    <property name="orphans">2</property>
                                    <property name="textTransform">none</property>
                                    <property name="whiteSpace">normal</property>
                                    <property name="widows">2</property>
                                    <property name="wordSpacing">normal</property>
                                    <property name="display">block</property>
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <property name="pageBreakInside">auto</property>
                                    <property name="showIfBlank">false</property>
                                    <property name="canShrink">false</property>
                                    <property name="overflow">hidden</property>
                                    <text-property name="text">币       种 ：</text-property>
                                </label>
                            </cell>
                            <cell id="1679">
                                <property name="colSpan">1</property>
                                <property name="rowSpan">1</property>
                                <property name="borderBottomColor">#0046FF</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">1px</property>
                                <label id="1702">
                                    <property name="backgroundAttachment">scroll</property>
                                    <property name="backgroundPositionX">0%</property>
                                    <property name="backgroundPositionY">0%</property>
                                    <property name="backgroundRepeat">repeat</property>
                                    <property name="fontFamily">"微软雅黑"</property>
                                    <property name="fontSize">11pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="fontStyle">normal</property>
                                    <property name="fontVariant">normal</property>
                                    <property name="color">#0073DC</property>
                                    <property name="textLineThrough">none</property>
                                    <property name="textOverline">none</property>
                                    <property name="textUnderline">none</property>
                                    <property name="borderBottomColor">black</property>
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderBottomWidth">medium</property>
                                    <property name="borderLeftColor">black</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderLeftWidth">medium</property>
                                    <property name="borderRightColor">black</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderRightWidth">medium</property>
                                    <property name="borderTopColor">black</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="borderTopWidth">medium</property>
                                    <property name="marginTop">0pt</property>
                                    <property name="marginLeft">0pt</property>
                                    <property name="marginBottom">0pt</property>
                                    <property name="marginRight">0pt</property>
                                    <property name="paddingTop">1pt</property>
                                    <property name="paddingLeft">1pt</property>
                                    <property name="paddingBottom">1pt</property>
                                    <property name="paddingRight">1pt</property>
                                    <property name="textAlign">left</property>
                                    <property name="letterSpacing">normal</property>
                                    <property name="lineHeight">normal</property>
                                    <property name="orphans">2</property>
                                    <property name="textTransform">none</property>
                                    <property name="whiteSpace">normal</property>
                                    <property name="widows">2</property>
                                    <property name="wordSpacing">normal</property>
                                    <property name="display">block</property>
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <property name="pageBreakInside">auto</property>
                                    <property name="showIfBlank">false</property>
                                    <property name="canShrink">false</property>
                                    <property name="overflow">hidden</property>
                                    <text-property name="text">人民币  |   单位：元</text-property>
                                </label>
                            </cell>
                        </row>
                    </grid>
                    <extended-item extensionName="HtmlItem" name="monthData" id="2778">
                        <property name="display">none</property>
                        <property name="pageBreakBefore">always</property>
                        <property name="pageBreakAfter">auto</property>
                        <property name="borderTopStyle">none</property>
                        <property name="borderLeftStyle">none</property>
                        <property name="borderBottomStyle">none</property>
                        <property name="borderRightStyle">none</property>
                        <property name="marginTop">0pt</property>
                        <property name="height">0.19166666666666668in</property>
                        <property name="width">2.6416666666666666in</property>
                        <property name="dataSet">month</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">month</property>
                                <text-property name="displayName">month</text-property>
                                <expression name="expression" type="javascript">dataSetRow["month"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">value</property>
                                <text-property name="displayName">value</text-property>
                                <expression name="expression" type="javascript">dataSetRow["value"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                    </extended-item>
                    <text id="2779">
                        <property name="marginTop">0pt</property>
                        <property name="pageBreakAfter">auto</property>
                        <property name="pageBreakBefore">auto</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<div id="lineChart" style="width:7in;height:3.0in;"></div>]]></text-property>
                    </text>
                    <text id="2780">
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<script>  
    function drawLineChart(theme) {
        var myChart = echarts.init(document.getElementById('lineChart'), theme);    
        var el = document.getElementById("monthData");
        var rs = el.__instance.getResultSet(); 
        var nameIndex = rs.columnIndex("month");
        var valueIndex = rs.columnIndex("value");
        var values = rs.data.values;
        var legendData = [];
        var chartData = [];
        var lastMonth = "";
        var lastValue = "";
        for(var i = 0, len = values.length; i < len; i++) {
            var e = values[i];
            if(i == len -1) {           
                lastMonth = e[nameIndex];
                lastValue = e[valueIndex];

                var nodeData = {
                    value: lastMonth, 
                    textStyle: {
                        color : "#FF8000",
                        fontWeight: 'bold'
                    }
                };
                legendData.push(nodeData);
                
                nodeData = {
                    value: lastValue, 
                    itemStyle:{ 
                        normal: {
                            color : '#FF8000',
                            label: {
                                textStyle: {
                                    color : "#FF8000",
                                    fontWeight: 'bold'
                                }
                            }
                        }
                    }
                };
                chartData.push(nodeData);
            } else {
                legendData.push(e[nameIndex]);
                chartData.push(e[valueIndex]);
            }
        }
        
        var option = {
            title : {
                text: '近半年来您使用建行卡的消费走势',
               // subtext: '(单位：元)',
                show: true,
                x: 'center',
                y: 'top',
                padding: [30,0, 0, 0],
                textStyle : {
                    fontSize: 18,
                    color: '#0046ff'
                }
            },
            grid:{
                borderWidth:0
            },
            tooltip : {
                trigger: 'item',
                formatter: function(params) {
                  var value = params.value;
                  try{                    
                    value = value.toFixed(2);
                    if(value ==0){value =0}
                  }catch(e) {}
                  return params.name +"<br>" +"￥"+ value ;
                }
            },
            legend: {
                show: false,
                data:['月度消费']
            },
            toolbox: {
                show : false
            },
            calculable : false,
            xAxis : [{
                type : 'category',
                boundaryGap : false,
                data : legendData,
                axisTick : {show: false},
                axisLine : {show: false},
                splitLine : {show:false},
                axisLabel:{
                    textStyle : {
                        color: "#7d7d7d"
                    }
                }                   
            }],
            yAxis : [{
                type : 'value',
                //splitNumber:5,
                show : false
            }],
            color: ['#0046ff'],  //#BEDC1E
            series : [{
                name:'月消费',                
                type:'line',
                smooth:true,
                symbolSize: 8,
                itemStyle : {
                    normal : {
                        areaStyle:{
                            //type: 'default',
                           //color: [190,220,30,0.6]
                        } ,
                        label : {
                            show : true,
                            formatter: function(params) {
                              var value = params.value;
                              try{                                
                                value = value.toFixed(2);
                                if(value ==0){value =0}
                              }catch(e) {}
                              return value ;
                            },
                            textStyle : {
                                color: "#7d7d7d"
                            }                
                        }
                    }
                },
                data: chartData,
                markPoint : {
                    itemStyle: {
                        normal: {
                            label:{show: false},                            
                            color : "#FF8000"
                        }
                    },               
                    data : [
                        {name: lastMonth, xAxis: lastMonth, yAxis: lastValue, symbol:'circle', symbolSize: 8, value: lastValue}
                    ]   
                }
            }]
        };
                                            
        myChart.setOption(option, true);
        // myChart.on("click", function (param) {
        //         var month = param.name;
        //         if(month !=lastMonth){
        //             location.href="http://www.800os.cn/?month=" + param.name;
        //         }
        //     });
    }
    
    require(["lib/echarts/echarts-small", "lib/echarts/theme/macarons"], function(echarts, theme){
        drawLineChart(theme);
    });               
    </script>]]></text-property>
                    </text>
                    <grid id="2920">
                        <property name="marginTop">10pt</property>
                        <property name="width">7in</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                            </structure>
                        </list-property>
                        <column id="2922">
                            <property name="width">5in</property>
                        </column>
                        <row id="2923">
                            <cell id="2925">
                                <property name="borderBottomStyle">none</property>
                                <property name="borderLeftStyle">none</property>
                                <property name="borderRightStyle">none</property>
                                <property name="borderTopStyle">none</property>
                                <property name="verticalAlign">bottom</property>
                                <text id="2849">
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="textAlign">left</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                                        </structure>
                                    </list-property>
                                    <property name="contentType">html</property>
                                    <text-property name="content"><![CDATA[<div id="gaugeChart" style="width:7.0in;height:1.5in;"></div>]]></text-property>
                                </text>
                            </cell>
                        </row>
                    </grid>
                    <text id="2850">
                        <property name="fontSize">10pt</property>
                        <property name="borderBottomStyle">none</property>
                        <property name="borderLeftStyle">none</property>
                        <property name="borderRightStyle">none</property>
                        <property name="borderTopStyle">none</property>
                        <property name="display">none</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<script>  
    function drawGaugeChart(theme) {
        var myChart = echarts.init(document.getElementById('gaugeChart'), theme);  
        var UserAmount  = <VALUE-OF>UserAmount</VALUE-OF>;
        var percentValue;
        if(UserAmount ==0){
            percentValue = 0;
        }
        else{
           percentValue = <VALUE-OF>Formatter.format(UserPercentile*100,"###,##0")</VALUE-OF> 
        }
        var option = {
            tooltip : {
                formatter: "{a} <br/>{b} : {c}%"
            },
            toolbox: {
                show : true

            },
            series : [
                {

                        name:'消费总额',
                        type:'gauge',
                        startAngle: 180,
                        endAngle: 0,
                        center : ['50%', '100%'],    // 默认全局居中
                        radius : ['70%', '180%'] ,
                        axisLine: {            // 坐标轴线
                            lineStyle: {       // 属性lineStyle控制线条样式
                               width: '60%',
                                color: [
                                    [0.2, '#bedc1e'],
                                    [0.8, '#00BEF0'],
                                    [1, '#dc50eb']
                                ],           
                                  }
                        },
                        // axisTick: {            // 坐标轴小标记
                        //   splitNumber: 10,   // 每份split细分多少段
                        //    length :12,        // 属性length控制线长
                        // },
                        axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel
                            formatter: function(v){
                                switch (v+''){
                                    case '10': return '低';
                                    case '50': return '中';
                                    case '90': return '高';
                                    default: return '';
                                }
                            },
                            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                                color: '#fff',
                                fontSize: 15,
                              fontWeight: 'bolder'
                            }
                        },
                        pointer: {
                            width:20,
                            length: '95%',
                            color: 'rgba(255, 255, 255, 0.8)'
                        },
                        title : {
                            show : false,
                            offsetCenter: [0, '-60%'],       // x, y，单位px
                            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                                color: '#fff',
                                fontSize: 30
                            }
                        },
                        detail : {
                            show : true,
                            backgroundColor: 'rgba(0,0,0,0)',
                            borderWidth: 0,
                            borderColor: '#ccc',
                            // width: 100,
                            // height: 20,
                            offsetCenter: [0, '-25%'],       // x, y，单位px
                            formatter:'{value}%',
                            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                              fontSize : 30
                            }
                        },
                        data:[{value: percentValue, name: '您的排名'}] 
                    }
                
            ]
        };
          
        if(UserAmount !=0){  myChart.setOption(option, true);}
        else{
                myChart.showLoading({
                text : '您本期的消费总额为 0 元。 适当消费，人生会更精彩哦。',
                //x:'left',
                //y:'',
                effect : 'bar',
                textStyle : {
                    fontSize : 15,

                }
            });
        }                               

    }
    
     require(["lib/echarts/echarts-small", "lib/echarts/theme/macarons"], function(echarts, theme){
        drawGaugeChart(theme);
    });               
    </script>]]></text-property>
                    </text>
                    <text-data id="2749">
                        <property name="fontFamily">"黑体"</property>
                        <property name="fontSize">15pt</property>
                        <property name="fontWeight">normal</property>
                        <property name="color">#0080FF</property>
                        <property name="marginTop">30pt</property>
                        <property name="marginBottom">20pt</property>
                        <property name="textAlign">center</property>
                        <expression name="valueExpr">var x = new Number(UserAmount);&#13;
if(x >0){&#13;
"您本期的消费总额为 "+Formatter.format(x,"##0.00")+" 元， 超越了 "+Formatter.format(UserPercentile*100,"##0")+"% 的持卡消费用户！"&#13;
}else if(x ==0){&#13;
"您本期的消费总额为 0 元。 "+"&lt;br>"+ "&lt;br>"+"建行与您相随，消费的时候可以尝试拿我开刷哦！"&#13;
}</expression>
                        <property name="contentType">html</property>
                    </text-data>
                    <extended-item extensionName="HtmlItem" name="pieData" id="2771">
                        <property name="display">none</property>
                        <property name="height">0.2in</property>
                        <property name="width">2.7333333333333334in</property>
                        <property name="dataSet">pie</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">CardID</property>
                                <text-property name="displayName">CardID</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardID"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">CardType</property>
                                <text-property name="displayName">CardType</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardType"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">CardAmount</property>
                                <text-property name="displayName">CardAmount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardAmount"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CardPercentile</property>
                                <text-property name="displayName">CardPercentile</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardPercentile"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CardName</property>
                                <text-property name="displayName">CardName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">CardFullID</property>
                                <text-property name="displayName">CardFullID</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardFullID"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">CardFullIDStar</property>
                                <text-property name="displayName">CardFullIDStar</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CardFullIDStar"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                    </extended-item>
                    <text id="2772">
                        <property name="borderBottomStyle">none</property>
                        <property name="borderLeftStyle">none</property>
                        <property name="borderRightStyle">none</property>
                        <property name="borderTopStyle">none</property>
                        <property name="textAlign">left</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<div id="pieChart" style="width:7.0in;height:3.0in;"></div>]]></text-property>
                    </text>
                    <text id="2776">
                        <property name="display">none</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<script>
function drawPieChart(theme) {  
    var myChart = echarts.init(document.getElementById('pieChart'),theme); 
    var el = document.getElementById("pieData");
    var rs = el.__instance.getResultSet(); 
    var cardNameIndex = rs.columnIndex("CardName");
    var valueIndex = rs.columnIndex("CardAmount");
    var cardFullIDIndex = rs.columnIndex("CardFullID");
    var cardIDIndex = rs.columnIndex("CardID");
    var values = rs.data.values;
    var legendData = [];
    var chartData = [];
    sort(values,valueIndex);
    for(var i = 0, len = values.length; i < len; i++) {
        var e = values[i];
        chartData.push({
            name: e[cardFullIDIndex],
            value: e[valueIndex],
            shortname: e[cardNameIndex]
        });
        legendData.push({
            name: e[cardFullIDIndex],
        });
    }


    var myChart = echarts.init(document.getElementById('pieChart'),theme); 


    var option = {
                title : {
                    text: '账户消费分析',
                    show: true,
                    x: 'center',
                    y: 'bottom',
                    padding: [5,5, 5, 5],
                    textStyle : {
                        fontSize: 18,
                        color: '#0046ff'
                    }
                },
                tooltip : {
                    trigger: 'item',
                        formatter: function(params, ticket, callback) {
                            var percent = params.percent;
                            var value =  params.value;                           
                            var name = params.data.shortname;
                            value = value.toFixed(2);
                            if(value ==0){value =0}
                            percent = parseFloat(percent).toFixed(2);
                            if(percent ==0){percent =0}
                            if(percent ==100){percent =100}
                            return name + "<br>" +"￥" + value+ "<br>" +"&amp;nbsp;"+percent + "%";
                        }
                    },
                legend: {
                    orient : 'vertical',
                    x : 480,
                    y : 'center',
                    padding: 0,
                    data:legendData,                
                    textStyle: {
                        color: "#7d7d7d",
                        fontSize : '12',
                    },
                    formatter: function(params) {                   
                       var s = "";                   
                       for(var i=0; i<chartData.length; i++){
                            if(params == chartData[i].name){
                                    var value = parseFloat(chartData[i].value); 
                                        value = value.toFixed(2);
                                        if(value ==0.001 || value ==0){value =0}
                                        s = chartData[i].shortname + "  ￥" + value;  
                                        return s;                                   
                            }                            
                       }

                    }
                },
            toolbox: {
                show : false
            },
            calculable : false,
            color: ['#0046ff', '#dc50eb', '#bedc1e', '#f07814', '#5a4641','#00BEF0','#AA5555'],
            series : [
            {
                name:'消费占比',
                type:'pie',
                radius : ['40%', '80%'],   
                center:  ['50%', '45%'],
                startAngle:0,                 
                clockWise: false,           
                itemStyle : {
                    normal : {
                        label : {
                            show : true,
                            position: "inner",
                            textStyle : {
                                fontSize : '15',
                                fontWeight : 'bold'
                            },
                            formatter: function(params, ticket, callback) {
                                var percent = parseFloat(params.percent);
                                percent = percent.toFixed(0);
                                if(percent >0){
                                    return percent + "%";
                                }else{
                                    return "";
                                }

                            }
                        },
                        labelLine : {
                            show : false,                            
                        }
                    },
                    emphasis : {
                        label : {
                            show : true,
                            position : 'center',
                            textStyle : {
                                fontSize : '15',
                                fontWeight : 'bold'
                            },
                            formatter: function(params, ticket, callback) { 
                                return params.data.shortname;
                            }
                        }
                    }
                },
                data: chartData
            }
            ]
        };
        
        if(chartData.length == 0){
            myChart.showLoading({
                text : '没有账户有消费记录',
                //x:'left',
                //y:'',
                effect : 'dynamicLine',
                textStyle : {
                    fontSize : 15,

                }
            }); 
        }
        else{
            myChart.setOption(option, true);
        }     
    }    
    
    require(["lib/echarts/echarts-small", "lib/echarts/theme/macarons"], function(echarts, theme){
        drawPieChart(theme);
    });  
    </script>]]></text-property>
                    </text>
                    <grid id="2821">
                        <property name="marginTop">20pt</property>
                        <property name="marginBottom">1pt</property>
                        <property name="height">15pt</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                            </structure>
                        </list-property>
                        <column id="2822"/>
                        <row id="2823">
                            <cell id="2824">
                                <property name="backgroundColor">#CDE3F8</property>
                                <property name="borderBottomColor">#0046FF</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">1px</property>
                                <label id="2640">
                                    <property name="backgroundAttachment">scroll</property>
                                    <property name="backgroundPositionX">0%</property>
                                    <property name="backgroundPositionY">0%</property>
                                    <property name="backgroundRepeat">repeat</property>
                                    <property name="fontFamily">"黑体"</property>
                                    <property name="fontSize">11pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="fontStyle">normal</property>
                                    <property name="fontVariant">normal</property>
                                    <property name="color">#0073DC</property>
                                    <property name="textLineThrough">none</property>
                                    <property name="textOverline">none</property>
                                    <property name="textUnderline">none</property>
                                    <property name="borderLeftColor">black</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderLeftWidth">medium</property>
                                    <property name="borderRightColor">black</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderRightWidth">medium</property>
                                    <property name="borderTopColor">black</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="borderTopWidth">medium</property>
                                    <property name="marginTop">0pt</property>
                                    <property name="marginLeft">20pt</property>
                                    <property name="marginBottom">3pt</property>
                                    <property name="marginRight">0pt</property>
                                    <property name="paddingTop">1pt</property>
                                    <property name="paddingLeft">1pt</property>
                                    <property name="paddingBottom">1pt</property>
                                    <property name="paddingRight">1pt</property>
                                    <property name="textAlign">left</property>
                                    <property name="letterSpacing">normal</property>
                                    <property name="lineHeight">normal</property>
                                    <property name="orphans">2</property>
                                    <property name="textTransform">none</property>
                                    <property name="whiteSpace">normal</property>
                                    <property name="widows">2</property>
                                    <property name="wordSpacing">normal</property>
                                    <property name="display">block</property>
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <property name="pageBreakInside">auto</property>
                                    <property name="showIfBlank">false</property>
                                    <property name="canShrink">false</property>
                                    <property name="overflow">hidden</property>
                                    <text-property name="text">类别统计与历史比较</text-property>
                                </label>
                            </cell>
                        </row>
                    </grid>
                    <grid id="1624">
                        <property name="marginTop">30pt</property>
                        <property name="marginLeft">20pt</property>
                        <property name="height">1.3020833333333333in</property>
                        <property name="width">6.688in</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                            </structure>
                        </list-property>
                        <column id="2639">
                            <property name="width">2.2in</property>
                        </column>
                        <column id="1625">
                            <property name="width">2.2in</property>
                        </column>
                        <row id="1627">
                            <property name="height">1.4in</property>
                            <cell id="2638">
                                <property name="borderBottomStyle">none</property>
                                <property name="borderLeftStyle">none</property>
                                <property name="borderRightStyle">none</property>
                                <property name="borderTopStyle">none</property>
                                <text id="2782">
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">doc</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">docx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odp</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ods</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">pdf</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">postscript</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ppt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                    </list-property>
                                    <property name="contentType">html</property>
                                    <text-property name="content"><![CDATA[<div id="topSumChart" style="width:3.344in;height:2in;"></div>]]></text-property>
                                </text>
                                <text id="2785">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">doc</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">docx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odp</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ods</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">pdf</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">postscript</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ppt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">pptx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xls</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xls_spudsoft</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xlsx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                    </list-property>
                                    <property name="contentType">html</property>
                                    <text-property name="content"><![CDATA[<script>  
  function drawTopSumChart(theme) {
    var myChart = echarts.init(document.getElementById('topSumChart'), theme); 
    var el = document.getElementById("topSumData");
      var rs = el.__instance.getResultSet(); 
      var nameIndex = rs.columnIndex("shopName");
    var valueIndex = rs.columnIndex("shopAmount");
    var values = rs.data.values;
    var legendData = [];
    var chartData = [];
    var maxLen = 7; 
    sort(values,valueIndex);
    for(var i = values.length-1; i >=0; i--) {
      var e = values[i];
      var name = e[nameIndex];
      
      legendData.push(name);
      var color = '#0046ff';
      if((i+1) % 3 == 1) {
        color = '#fc663f';
      } else if((i+1) % 3 == 2) {
        color = '#ffb402';
      }
      
      chartData.push({
        value: e[valueIndex],
        itemStyle: {
          normal: {
            color: color
          }
        }
      });
    }
    
    var option = {
        title : {
            text: '累计消费最多的商户',
            x: 'center',            
           // padding: [10, 5, 5, 5],
            textStyle: {
              fontSize: 18,
              color: "#0046ff",
             // fontWeight: "600"
            }
        },
            tooltip : {
                trigger: 'item',
                formatter: function(params) {
                  var value = params.value;
                  try{
                    value = value.toFixed(2);
                    // value = (value + '').split('.');                    
                    // value = value[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value[1];
                    if(value ==0){value =0}
                  }catch(e) {}
                  return params.name + "<br>"+ value ;
                }
            },

        legend: {
          show : false,
            data:['累计消费']
        },
        toolbox: {
            show : false
        },
        calculable : false,
        grid:{
        x:100,
        y:40,
        x2:50,
        y2:10,
        borderWidth : 0
      },
      color: ['#02bff3'],
        xAxis : [{
              type : 'value',
              show : false,              
              
          }],
        yAxis : [
          {
              type : 'category',
              data : legendData,
              nameTextStyle:{
                  fontSize: "12"
              },
              axisTick: {
                show : false
              },
              axisLine: {
                show : false
              },
              axisLabel: {
                textStyle:{
                  fontSize: "12",
                  color: "#7d7d7d"
                },
                formatter: function(params) {
                   var name = params.toString();
                   if(name.length >= 8) {
                     name = name.substring(0,6) + "...";
                   }                   
                   return name ;
                }
              }

          }
        ],
        series : [
          {
              name:'累计消费',
              type:'bar',
             barWidth: "30",
              itemStyle : {
                  normal : {                    
                    barBorderRadius: [0, 5, 5, 0],
                      label : {
                          show : true,
                            formatter: function(params) {
                              var value = params.value;
                              try{
                                value = value.toFixed(2);
                                // value = (value + '').split('.');                                
                                // value = value[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value[1];
                                if(value ==0){value =0}
                              }catch(e) {}
                              return value ;
                            },
                         // position: "outside",
                          textStyle : {
                            color: "#7d7d7d"
                          }                   
                      }
                  }
              },
              data: chartData
          }
        ]
    };
                              
        if(chartData.length == 0){
            myChart.showLoading({
                text : '没有累计消费前三名商户的记录',
                //x:'left',
                //y:'',
                effect : 'whirling',
                textStyle : {
                    fontSize : 12,

                }
            }); 
        }
        else{
            myChart.setOption(option, true);
        }     
   
  }
  
  require(["lib/echarts/echarts-small", "lib/echarts/theme/macarons"], function(echarts, theme){
    drawTopSumChart(theme);
  });      
 
</script>]]></text-property>
                                </text>
                                <extended-item extensionName="HtmlItem" name="topSumData" id="2784">
                                    <property name="display">none</property>
                                    <property name="height">0.21666666666666667in</property>
                                    <property name="width">2.3833333333333333in</property>
                                    <property name="dataSet">topSum</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">doc</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">docx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odp</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ods</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">pdf</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">postscript</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ppt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">pptx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xls</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xls_spudsoft</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xlsx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                    </list-property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">shopName</property>
                                            <text-property name="displayName">shopName</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["shopName"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">shopAmount</property>
                                            <text-property name="displayName">shopAmount</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["shopAmount"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                </extended-item>
                            </cell>
                            <cell id="1628">
                                <property name="borderBottomStyle">none</property>
                                <property name="borderLeftStyle">none</property>
                                <property name="borderRightStyle">none</property>
                                <property name="borderTopStyle">none</property>
                                <property name="textAlign">center</property>
                                <text id="2787">
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">doc</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">docx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odp</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ods</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">pdf</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">postscript</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ppt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                    </list-property>
                                    <property name="contentType">html</property>
                                    <text-property name="content"><![CDATA[<div id="topEachChart" style="width:3.344in;height:2in;"></div>]]></text-property>
                                </text>
                                <text id="2788">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">doc</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">docx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odp</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ods</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">pdf</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">postscript</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ppt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">pptx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xls</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xls_spudsoft</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xlsx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                    </list-property>
                                    <property name="contentType">html</property>
                                    <text-property name="content"><![CDATA[<script>  
    function drawTopEachChart(theme) {
        var myChart = echarts.init(document.getElementById('topEachChart'), theme); 
        var el = document.getElementById("topEachData");
        var rs = el.__instance.getResultSet(); 
        var nameIndex = rs.columnIndex("eachName");
        var valueIndex = rs.columnIndex("eachAmount");
        var values = rs.data.values;
        var legendData = [];
        var chartData = [];
        var maxLen = 7;
        sort(values,valueIndex);
        for(var i = values.length-1 ; i >=0; i--) {
            var e = values[i];
            var name = e[nameIndex];
            
            legendData.push(name);
            var color = '#0046ff';
            if((i+1) % 3 == 1) {
                color = '#fc663f';
            } else if((i+1) % 3 == 2) {
                color = '#ffb402';
            }
            
            chartData.push({
                value: e[valueIndex],
                itemStyle: {
                    normal: {
                        color: color
                    }
                }
            });
        }
        
        var option = {
            title : {
                text: '单笔消费最高的商户',
                x: 'center',
               // padding: [10, 5, 5, 5],
                textStyle: {
                    fontSize: 18,
                    color: "#0046ff",
                   // fontWeight: "600"
                }
            },
            tooltip : {
                trigger: 'item',
                formatter: function(params) {
                  var value = params.value;
                  try{
                    value = value.toFixed(2);
                    // value = (value + '').split('.');                    
                    // value = value[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value[1];
                    if(value ==0){value =0}
                  }catch(e) {}
                  return params.name + "<br>"+ value ;
                }
            },
            legend: {
                show : false,
                data:['累计消费']
            },
            toolbox: {
                show : false
            },
            calculable : false,
            grid:{
                x:100,
                y:40,
                x2:50,
                y2:10,
                borderWidth : 0
            },
            color: ['#02bff3'],
            xAxis : [{
                type : 'value',
                show : false,
                //boundaryGap : [0, 0.01]
            }],
            yAxis : [
            {
                type : 'category',
                data : legendData,
                nameTextStyle:{
                    fontSize: "12"
                },
                axisTick: {
                    show : false
                },
                axisLine: {
                    show : false
                },
                axisLabel: {
                    textStyle:{
                        fontSize: "12",
                        color: "#7d7d7d"
                    },
                    formatter: function(params) {
                       var name = params.toString();
                       if(name.length >= 8) {
                         name = name.substring(0,6) + "...";
                       }                   
                       return name ;
                    }
                }
            }
            ],
            series : [
            {
                name:'单笔消费',
                type:'bar',
               barWidth: "30",
                itemStyle : {
                    normal : {                      
                        barBorderRadius: [0, 5, 5, 0],
                        label : {
                            show : true,
                            formatter: function(params) {
                              var value = params.value;
                              try{
                                value = value.toFixed(2);
                                // value = (value + '').split('.');                                
                                // value = value[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value[1];
                                if(value ==0){value =0}
                              }catch(e) {}
                              return value ;
                            },

                           // position: "outside",
                            textStyle : {
                                color: "#7d7d7d",
                            }                   
                        }
                    }
                },
                data: chartData
            }
            ]
        };
                              
        if(chartData.length == 0){
            myChart.showLoading({
                text : '没有单笔消费前三名商户的记录',
                //x:'left',
                //y:'',
                effect : 'whirling',
                textStyle : {
                    fontSize : 12,

                }
            }); 
        }
        else{
            myChart.setOption(option, true);
        }           
    }
    
    require(["lib/echarts/echarts-small", "lib/echarts/theme/macarons"], function(echarts, theme){
        drawTopEachChart(theme);
    });      
 
</script>]]></text-property>
                                </text>
                                <extended-item extensionName="HtmlItem" name="topEachData" id="2786">
                                    <property name="display">none</property>
                                    <property name="height">0.21666666666666667in</property>
                                    <property name="width">2.3833333333333333in</property>
                                    <property name="dataSet">topEach</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">doc</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">docx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odp</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ods</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">odt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">pdf</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">postscript</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">ppt</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">pptx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xls</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xls_spudsoft</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                        <structure>
                                            <property name="format">xlsx</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                    </list-property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">eachName</property>
                                            <text-property name="displayName">eachName</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["eachName"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">eachAmount</property>
                                            <text-property name="displayName">eachAmount</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["eachAmount"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                </extended-item>
                            </cell>
                        </row>
                    </grid>
                    <extended-item extensionName="HtmlItem" name="tpyeHisData" id="2790">
                        <list-property name="filter">
                            <structure>
                                <property name="operator">in</property>
                                <expression name="expr" type="javascript">row["typeVal"]</expression>
                                <simple-property-list name="value1">
                                    <value>topItemCode</value>
                                </simple-property-list>
                                <property name="updateAggregation">true</property>
                            </structure>
                        </list-property>
                        <property name="display">none</property>
                        <property name="pageBreakBefore">auto</property>
                        <property name="marginTop">20pt</property>
                        <property name="height">0.175in</property>
                        <property name="width">1.85in</property>
                        <property name="dataSet">tpyeHistory</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">historyCompareVisible == 0</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">period</property>
                                <text-property name="displayName">period</text-property>
                                <expression name="expression" type="javascript">dataSetRow["period"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">type</property>
                                <text-property name="displayName">type</text-property>
                                <expression name="expression" type="javascript">dataSetRow["type"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">typeVal</property>
                                <text-property name="displayName">typeVal</text-property>
                                <expression name="expression" type="javascript">dataSetRow["typeVal"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">value</property>
                                <text-property name="displayName">value</text-property>
                                <expression name="expression" type="javascript">dataSetRow["value"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                    </extended-item>
                    <text id="2789">
                        <property name="marginTop">50pt</property>
                        <property name="textAlign">center</property>
                        <property name="pageBreakAfter">auto</property>
                        <property name="pageBreakBefore">auto</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">historyCompareVisible == 0</expression>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<div id="tpyeHis" style="width:7in;height:3in;"></div>]]></text-property>
                    </text>
                    <text id="2791">
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">historyCompareVisible == 0</expression>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<script>  
     function drawCompChart1(theme) {
        var myChart = echarts.init(document.getElementById('tpyeHis'), theme); 
        var el = document.getElementById("tpyeHisData");
        var rs = el.__instance.getResultSet(); 
        var periodIndex = rs.columnIndex("period");
        var typeIndex = rs.columnIndex("type");
        var valueIndex = rs.columnIndex("value");
        var values = rs.data.values;
        
        var legendData = getAnalyticsCts();     
        var hisData = initDataGroup(legendData);
        var nowData = initDataGroup(legendData);
        for(var i = 0, len = values.length; i < len; i++) {
            var e = values[i];
            var period = e[periodIndex];
            var typeTxt = e[typeIndex];
            var val = e[valueIndex];
            if(period === 'now') {
                updateDataGroup(legendData, nowData, typeTxt, val);
            } else {
                updateDataGroup(legendData, hisData, typeTxt, val);
            }
        }
        
        var option = {
            title : {
                text: '本月与上月消费比较分析',
                x: "center",
                y: "top",
                padding: [0,0,0,20],
                textStyle: {
                    fontSize: "18",
                    color: "#0046ff",
                    //fontWeight: "600"
                }
            },
            tooltip : {
                trigger: 'axis',
                textStyle:{align:'left'},
                formatter: function(params) {
                  var value = params[0].value;
                  var value2 = params[1].value;
                  try{
                        value = value.toFixed(2);
                        // value = (value + '').split('.');                    
                        // value = value[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value[1];
                        if(value ==0){value =0}

                        value2 = value2.toFixed(2);
                        // value2 = (value2 + '').split('.');                    
                        // value2 = value2[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value2[1];
                        if(value2 ==0){value2 =0}   
                  }catch(e) {}
                  return params[0].name + "<br>"+ params[0].seriesName + ": " + value +"<br>" + params[1].seriesName + ": " + value2; ;
                },
                axisPointer : {
                    type : 'shadow',
                    shadowStyle: {
                        color: 'rgba(150,150,150,0.3)',
                        width: 'auto',
                        type: 'default'
                    }
                }
            },
            legend: {
                data:['本月','上月'],
                x: "right",
                y: "top",
                //padding: [30, 5, 5, 5],
                textStyle: {
                    color: "#7d7d7d",
                    fontSize: "12",
                }
            },
            toolbox: {
                show : false
            },
            calculable : false,
            grid:{
                 borderWidth : 0
            },
            color: ['#bedc1e', '#5A7C71'],
            xAxis : [
            {
                type : 'category',
                data : legendData,
                axisTick: {
                    show: false
                },
                axisLine: {
                    show: false
                },
                axisLabel: {
                    textStyle : {
                        color: "#7d7d7d",
                        fontSize: "12",
                    }
                }               
            }],
            yAxis : [
            {
                type : 'value',
                show: false
            }],
            series : [
            {
                name:'本月',
                type:'bar',
               barWidth: "30",
               // barCategoryGap: '30%',
               // barGap: '30%',
                itemStyle : {
                    normal : {
                      barBorderRadius: [5, 5, 0, 0],
                        label : {
                            show : true,
                            formatter: function(params) {
                              var value = params.value;
                              try{
                                value = value.toFixed(2);
                                // value = (value + '').split('.');
                                if(value[1] == null){value[1] = "00"}
                                // value = value[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value[1];
                                if(value ==0){value =0}
                              }catch(e) {}
                              return value ;
                            },
                            textStyle : {
                                color: "#7d7d7d",
                                fontSize: "15",
                            }                   
                        }
                    }
                },
                data: nowData
            },
            {
                name:'上月',
                type:'line',
                smooth:true,
                symbolSize: 6,
                data: hisData
            }
            ]
        };
                                   
        myChart.setOption(option, true);    
    }

    require(["lib/echarts/echarts-small", "lib/echarts/theme/macarons"], function(echarts, theme){
        drawCompChart1(theme);
    });  
</script>]]></text-property>
                    </text>
                    <data id="2810">
                        <property name="backgroundAttachment">scroll</property>
                        <property name="backgroundPositionX">0%</property>
                        <property name="backgroundPositionY">0%</property>
                        <property name="backgroundRepeat">repeat</property>
                        <property name="fontFamily">"微软雅黑"</property>
                        <property name="fontSize">10pt</property>
                        <property name="fontWeight">normal</property>
                        <property name="fontStyle">normal</property>
                        <property name="fontVariant">normal</property>
                        <property name="color">gray</property>
                        <property name="textLineThrough">none</property>
                        <property name="textOverline">none</property>
                        <property name="textUnderline">none</property>
                        <property name="borderBottomColor">black</property>
                        <property name="borderBottomStyle">none</property>
                        <property name="borderBottomWidth">medium</property>
                        <property name="borderLeftColor">black</property>
                        <property name="borderLeftStyle">none</property>
                        <property name="borderLeftWidth">medium</property>
                        <property name="borderRightColor">black</property>
                        <property name="borderRightStyle">none</property>
                        <property name="borderRightWidth">medium</property>
                        <property name="borderTopColor">black</property>
                        <property name="borderTopStyle">none</property>
                        <property name="borderTopWidth">medium</property>
                        <property name="marginLeft">90pt</property>
                        <property name="marginBottom">0pt</property>
                        <property name="marginRight">5pt</property>
                        <property name="paddingTop">1pt</property>
                        <property name="paddingLeft">1pt</property>
                        <property name="paddingBottom">1pt</property>
                        <property name="paddingRight">1pt</property>
                        <property name="textAlign">left</property>
                        <property name="letterSpacing">normal</property>
                        <property name="lineHeight">normal</property>
                        <property name="orphans">2</property>
                        <property name="textTransform">none</property>
                        <property name="whiteSpace">normal</property>
                        <property name="widows">2</property>
                        <property name="wordSpacing">normal</property>
                        <property name="display">block</property>
                        <property name="pageBreakAfter">auto</property>
                        <property name="pageBreakBefore">auto</property>
                        <property name="pageBreakInside">auto</property>
                        <property name="showIfBlank">false</property>
                        <property name="canShrink">false</property>
                        <property name="overflow">hidden</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">historyCompareVisible == 0</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">summaryCon</property>
                                <expression name="expression" type="javascript">var str= type_history;&#13;
var x = str.replace(/\&amp;semi/g, ";").replace(/\&amp;comma/g, ",").replace(/\&amp;under/g, "_");&#13;
var xarr = x.split("_");&#13;
var strMe= xarr[0];&#13;
var strHistory= xarr[1];&#13;
var codeArrMe = new Array();&#13;
var valueArrMe = new Array();&#13;
var arr = new Array();&#13;
arr = strMe.split(";");&#13;
for(var  i=0; i&lt; arr.length; i++){&#13;
    var arr1 = arr[i].split(",");       &#13;
    codeArrMe.push(arr1[0]);&#13;
    valueArrMe.push(parseFloat(arr1[1]));&#13;
}&#13;
&#13;
var valueArrHistory = new Array();&#13;
var arrHistory = strHistory.split(";");&#13;
for(var i=0; i&lt; arrHistory.length; i++){&#13;
    var arr1 = arrHistory[i].split(",");&#13;
    valueArrHistory.push(parseFloat(arr1[1]));&#13;
}&#13;
&#13;
if(topItemCode.length ==0){&#13;
    topItemCode = codeArrMe;&#13;
}&#13;
&#13;
var valueArrMeFilter = new Array();&#13;
var valueArrHistoryFilter = new Array();&#13;
for(var i = 0; i&lt;topItemCode.length; i++){   //"topItemCode" is in the script of dataset ageTotal&#13;
    for(var j = 0; j&lt;codeArrMe.length; j++){&#13;
        if(codeArrMe[j] == topItemCode[i]){&#13;
            valueArrMeFilter[i] = valueArrMe[j];&#13;
            valueArrHistoryFilter[i] = valueArrHistory[j];&#13;
            break;              &#13;
        }&#13;
    }&#13;
}   &#13;
        &#13;
var part1 = "";&#13;
var part2 = " \n高于历史的有：";&#13;
var part3 = " \n低于历史的有：";&#13;
var moreThanHistory = new Array();&#13;
var lessThanHistory = new Array();&#13;
&#13;
var nameArrFilter=[];&#13;
    for(var i=0; i&lt; topItemCode.length; i++){&#13;
            var a = TransType(topItemCode[i]);&#13;
            nameArrFilter.push(a);&#13;
    }   &#13;
&#13;
for(var i = 0; i&lt;nameArrFilter.length; i++){&#13;
    if(valueArrMeFilter[i] > valueArrHistoryFilter[i]){&#13;
        moreThanHistory.push(nameArrFilter[i]);&#13;
    }else if(valueArrMeFilter[i] &lt; valueArrHistoryFilter[i]){&#13;
        lessThanHistory.push(nameArrFilter[i]);&#13;
    }&#13;
}&#13;
&#13;
if(moreThanHistory.length != 0){&#13;
    for(var i = 0; i&lt;moreThanHistory.length; i++){&#13;
        var punc = ((i==moreThanHistory.length-1)?"。 ":"， ");&#13;
        part2 += moreThanHistory[i] + punc; &#13;
    }   &#13;
}else{&#13;
    part2 = " \n您本期消费没有高于历史平均水平的项目。 ";&#13;
}&#13;
&#13;
&#13;
if(lessThanHistory.length != 0){&#13;
    for(var i = 0; i&lt;lessThanHistory.length; i++){&#13;
        var punc = ((i==lessThanHistory.length-1)?"。":"， ");&#13;
        part3 += lessThanHistory[i] + punc;&#13;
    }&#13;
}else {&#13;
    part3 = " \n您本期消费没有低于历史平均水平的项目。 ";   &#13;
}&#13;
&#13;
if(moreThanHistory.length == 0 &amp;&amp; lessThanHistory.length == 0){&#13;
    part2 = " \n您本期消费的项目都与历史平均水平一样。 ";&#13;
    part3 = "";&#13;
}&#13;
&#13;
// for the case all the item and their history have value = 0&#13;
var test = 0;&#13;
for(var i = 0; i&lt;valueArrMe.length; i++){&#13;
    if(valueArrMe[i] != 0 || valueArrHistory[i] != 0){&#13;
        test = 1;&#13;
    }&#13;
}&#13;
if(test == 0){&#13;
    part1 = "您本期和历史的消费都为零";&#13;
    part2 = "";&#13;
    part3 = "";&#13;
}&#13;
// end&#13;
part1 + part2 +part3</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <property name="resultSetColumn">summaryCon</property>
                    </data>
                    <extended-item extensionName="HtmlItem" name="roseData" id="2854">
                        <property name="display">none</property>
                        <property name="height">0.21666666666666667in</property>
                        <property name="width">2.3833333333333333in</property>
                        <property name="dataSet">tpyeHistory</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">period</property>
                                <text-property name="displayName">period</text-property>
                                <expression name="expression" type="javascript">dataSetRow["period"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">type</property>
                                <text-property name="displayName">type</text-property>
                                <expression name="expression" type="javascript">dataSetRow["type"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">typeVal</property>
                                <text-property name="displayName">typeVal</text-property>
                                <expression name="expression" type="javascript">dataSetRow["typeVal"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">value</property>
                                <text-property name="displayName">value</text-property>
                                <expression name="expression" type="javascript">dataSetRow["value"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                    </extended-item>
                    <text id="2855">
                        <property name="marginTop">50pt</property>
                        <property name="pageBreakAfter">auto</property>
                        <property name="pageBreakBefore">auto</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<div id="roseChart" style="width:7in;height:4in;"></div>]]></text-property>
                    </text>
                    <text id="2856">
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<script>  
function drawtreemapChart(theme) {
    var myChart = echarts.init(document.getElementById('roseChart'), theme); 
    var el = document.getElementById("roseData");
    var rs = el.__instance.getResultSet(); 
    var nameIndex = rs.columnIndex("type");
    var valueIndex = rs.columnIndex("value");
    var periodIndex = rs.columnIndex("period");
    var values = rs.data.values;    
    var chartData = [];
    for(var i = 0, len = values.length; i < len; i++) {
        var e = values[i]; 
        if(e[periodIndex]==="now" &amp;&amp; e[valueIndex] !=0 ){
            chartData.push({
                name: e[nameIndex],
                value: e[valueIndex]
        }); 
     }      

 }

 var option = {
     title : {
        text: '类别结构分析',
        x: "center",
        y: "top",
        padding: [0,0,20,0],
                textStyle: {
                   fontSize: "18",
                    color: "#0046ff",
                    //fontWeight: "600"
                }
    },
   tooltip : {
      trigger: 'item',
      formatter: function(params) {
        var name = params.name;
        var value = params.value;
        try{
              value = value.toFixed(2);
              // value = (value + '').split('.');                    
              // value = value[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value[1];
              if(value ==0){value =0}
        }catch(e) {}
        return  "￥" + value+  "<br>" + name; 
      },
   },
   calculable : false,
   color: ['#0046ff', '#dc50eb', '#bedc1e', '#f07814', '#5a4641','#00BEF0','#AA5555'],
   series : [
   {
       name:' ',
       type:'pie',
       startAngle:0,                 
       clockWise: false, 
       radius : [30, 95],      
      roseType : 'area',
       itemStyle: {
           normal: {
               label: {
                   show: true,
                   formatter: function(params) {
                       var name = params.name;
                       var value = params.value;
                       try{                                
                          value = value.toFixed(2);
                          if(value ==0){value =0}
                       }catch(e) {}
                       return value + "\n" +name ;
                   },
                   textStyle : {
                        //fontSize : '10',
                       // color: "#7d7d7d",
                       align:'center'
                   }, 
               },
               borderWidth: 1
           },
           emphasis: {
               label: {
                   show: false
               }
           }
       },
       data:chartData         
   }
   ]
};

        if(chartData.length == 0){
            myChart.showLoading({
                text : '您本期没有任何消费。',
                //x:'left',
                //y:'',
                effect : 'bar',
                textStyle : {
                    fontSize : 15,

                }
            }); 
        }
        else{
            myChart.setOption(option, true);
        }         
}

require(["lib/echarts/echarts-small", "lib/echarts/theme/macarons"], function(echarts, theme){
    drawtreemapChart(theme);
});      

</script>]]></text-property>
                    </text>
                    <data id="2806">
                        <property name="backgroundAttachment">scroll</property>
                        <property name="backgroundPositionX">0%</property>
                        <property name="backgroundPositionY">0%</property>
                        <property name="backgroundRepeat">repeat</property>
                        <property name="fontFamily">"微软雅黑"</property>
                        <property name="fontSize">10pt</property>
                        <property name="fontWeight">normal</property>
                        <property name="fontStyle">normal</property>
                        <property name="fontVariant">normal</property>
                        <property name="color">gray</property>
                        <property name="textLineThrough">none</property>
                        <property name="textOverline">none</property>
                        <property name="textUnderline">none</property>
                        <property name="borderBottomColor">black</property>
                        <property name="borderBottomStyle">none</property>
                        <property name="borderBottomWidth">medium</property>
                        <property name="borderLeftColor">black</property>
                        <property name="borderLeftStyle">none</property>
                        <property name="borderLeftWidth">medium</property>
                        <property name="borderRightColor">black</property>
                        <property name="borderRightStyle">none</property>
                        <property name="borderRightWidth">medium</property>
                        <property name="borderTopColor">black</property>
                        <property name="borderTopStyle">none</property>
                        <property name="borderTopWidth">medium</property>
                        <property name="marginTop">0pt</property>
                        <property name="marginLeft">90pt</property>
                        <property name="marginBottom">0pt</property>
                        <property name="marginRight">5pt</property>
                        <property name="paddingTop">1pt</property>
                        <property name="paddingLeft">1pt</property>
                        <property name="paddingBottom">1pt</property>
                        <property name="paddingRight">1pt</property>
                        <property name="textAlign">left</property>
                        <property name="letterSpacing">normal</property>
                        <property name="lineHeight">normal</property>
                        <property name="orphans">2</property>
                        <property name="textTransform">none</property>
                        <property name="whiteSpace">normal</property>
                        <property name="widows">2</property>
                        <property name="wordSpacing">normal</property>
                        <property name="display">block</property>
                        <property name="pageBreakAfter">auto</property>
                        <property name="pageBreakBefore">auto</property>
                        <property name="pageBreakInside">auto</property>
                        <property name="showIfBlank">false</property>
                        <property name="canShrink">false</property>
                        <property name="overflow">hidden</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">UserAmount == 0</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">summaryCon</property>
                                <expression name="expression" type="javascript">var str= type_history;&#13;
var strNow = str.substring(0, str.indexOf("&amp;under"));&#13;
var x = strNow.replace(/\&amp;semi/g, ";").replace(/\&amp;comma/g, ",");&#13;
&#13;
var codeArr = new Array();&#13;
var valueArr = new Array();&#13;
var arr = new Array();&#13;
arr = x.split(";");&#13;
for(var  i=0; i&lt; arr.length; i++){&#13;
    var arr1 = arr[i].split(",");   &#13;
    codeArr.push(arr1[0]);&#13;
    valueArr.push(parseFloat(arr1[1]));    &#13;
}&#13;
&#13;
var codesSort = SortValuesItems(valueArr, codeArr);&#13;
var topitems = [];&#13;
valueArr.sort(desc);&#13;
for(var i=0; i&lt; 5; i++){&#13;
    if(valueArr[i] !=0){&#13;
        topitems.push(TransType(codesSort[i]));&#13;
    }&#13;
}&#13;
&#13;
var num = topitems.length;&#13;
var part1 = "您本期消费了：";&#13;
var part2 = " ";&#13;
if(num == 0){&#13;
    part1 = "您本期没有任何消费。";&#13;
    part2 = "";&#13;
}&#13;
else if(num >0 &amp;&amp; num &lt; 4){ &#13;
    for(var i=0; i&lt;num; i ++){&#13;
        var punc = (i==(num-1)?"。":"， ");&#13;
        part2 +=topitems[i] + punc;       &#13;
    }&#13;
}&#13;
else{&#13;
    part1 = "您本期消费最多的三项依次为：";&#13;
        for(var i=0; i&lt;3; i ++){&#13;
        var punc = ((i==2)?"。":"， ");&#13;
        part2 +=topitems[i] + punc;&#13;
    }&#13;
}&#13;
&#13;
part1 + part2;</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <property name="resultSetColumn">summaryCon</property>
                    </data>
                    <grid id="2873">
                        <property name="marginTop">30pt</property>
                        <property name="marginBottom">1pt</property>
                        <property name="height">15pt</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">ageTotalVisible == 0 &amp;&amp; ageAveVisible== 0</expression>
                            </structure>
                        </list-property>
                        <column id="2874"/>
                        <row id="2875">
                            <cell id="2876">
                                <property name="backgroundColor">#CDE3F8</property>
                                <property name="borderBottomColor">#0046FF</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">1px</property>
                                <label id="2877">
                                    <property name="backgroundAttachment">scroll</property>
                                    <property name="backgroundPositionX">0%</property>
                                    <property name="backgroundPositionY">0%</property>
                                    <property name="backgroundRepeat">repeat</property>
                                    <property name="fontFamily">"黑体"</property>
                                    <property name="fontSize">11pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="fontStyle">normal</property>
                                    <property name="fontVariant">normal</property>
                                    <property name="color">#0073DC</property>
                                    <property name="textLineThrough">none</property>
                                    <property name="textOverline">none</property>
                                    <property name="textUnderline">none</property>
                                    <property name="borderLeftColor">black</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderLeftWidth">medium</property>
                                    <property name="borderRightColor">black</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderRightWidth">medium</property>
                                    <property name="borderTopColor">black</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="borderTopWidth">medium</property>
                                    <property name="marginTop">0pt</property>
                                    <property name="marginLeft">20pt</property>
                                    <property name="marginBottom">3pt</property>
                                    <property name="marginRight">0pt</property>
                                    <property name="paddingTop">1pt</property>
                                    <property name="paddingLeft">1pt</property>
                                    <property name="paddingBottom">1pt</property>
                                    <property name="paddingRight">1pt</property>
                                    <property name="textAlign">left</property>
                                    <property name="letterSpacing">normal</property>
                                    <property name="lineHeight">normal</property>
                                    <property name="orphans">2</property>
                                    <property name="textTransform">none</property>
                                    <property name="whiteSpace">normal</property>
                                    <property name="widows">2</property>
                                    <property name="wordSpacing">normal</property>
                                    <property name="display">block</property>
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <property name="pageBreakInside">auto</property>
                                    <property name="showIfBlank">false</property>
                                    <property name="canShrink">false</property>
                                    <property name="overflow">hidden</property>
                                    <text-property name="text">同龄人对比分析</text-property>
                                </label>
                            </cell>
                        </row>
                    </grid>
                    <extended-item extensionName="HtmlItem" name="ageTotalData" id="2793">
                        <property name="display">none</property>
                        <property name="pageBreakBefore">auto</property>
                        <property name="marginTop">0pt</property>
                        <property name="height">0.20833333333333334in</property>
                        <property name="width">1.85in</property>
                        <property name="dataSet">ageTotal</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">ageTotalVisible == 0</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">type</property>
                                <text-property name="displayName">type</text-property>
                                <expression name="expression" type="javascript">dataSetRow["type"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">value</property>
                                <text-property name="displayName">value</text-property>
                                <expression name="expression" type="javascript">dataSetRow["value"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">scope</property>
                                <text-property name="displayName">scope</text-property>
                                <expression name="expression" type="javascript">dataSetRow["scope"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                    </extended-item>
                    <text id="2792">
                        <property name="marginTop">30pt</property>
                        <property name="marginLeft">50pt</property>
                        <property name="pageBreakAfter">auto</property>
                        <property name="pageBreakBefore">auto</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">ageTotalVisible == 0</expression>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<div id="compChart2" style="width:6.0in;height:4in;"></div>]]></text-property>
                    </text>
                    <text id="2794">
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">ageTotalVisible == 0</expression>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<script>  
    function drawCompChart2(theme) {
        var myChart = echarts.init(document.getElementById('compChart2'), theme);
        
        var province = '<VALUE-OF>params["myProvince"].value</VALUE-OF>';
        var userAmount = <VALUE-OF>UserAmount</VALUE-OF>;
        var labelDisObj = false; 
        if(userAmount == 0 ){
            labelDisObj = true
        }
                
        var el = document.getElementById("ageTotalData");
        var rs = el.__instance.getResultSet(); 
        var scopeIndex = rs.columnIndex("scope");
        var typeIndex = rs.columnIndex("type");
        var valueIndex = rs.columnIndex("value");
        var values = rs.data.values;
        
        var legendData = getAnalyticsCts();     
        var myData = initDataGroup(legendData);
        var provinceData = initDataGroup(legendData);
        var nationData = initDataGroup(legendData);
        for(var i = 0, len = values.length; i < len; i++) {
            var e = values[i];
            var scope = e[scopeIndex];
            var typeTxt = e[typeIndex];
            var val = e[valueIndex];
            if(scope === 'nation') {
                updateDataGroup(legendData, nationData, typeTxt, val);
            } else if(scope === 'province') {
                updateDataGroup(legendData, provinceData, typeTxt, val);
            } else {
                updateDataGroup(legendData, myData, typeTxt, val);
            }
        }
        
        var option = {
            title : {
            text: '消费区域对比分析',
            x: "center",
            y: "top",
           // padding: [5,5,5,5],
            textStyle: {
               // fontSize: "18",
                color: "#0046ff",
                //fontWeight: "600"
            }
        },
        tooltip : {
            trigger: 'axis',
            formatter: function(params) {
              var value = params[0].value;
              var value2 = params[1].value;
              var value3 = params[2].value;
              try{
                    value = value.toFixed(2);
                    // value = (value + '').split('.');                    
                    // value = value[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value[1];
                    if(value ==0){value =0}

                    value2 = value2.toFixed(2);
                    // value2 = (value2 + '').split('.');                    
                    // value2 = value2[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value2[1];
                    if(value2 ==0){value2 =0}   

                    value3 = value3.toFixed(2);
                    // value3 = (value3 + '').split('.');                    
                    // value3 = value3[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value3[1];
                    if(value3 ==0){value3 =0}  
              }catch(e) {}
              return params[0].name + "<br>"+ params[0].seriesName + ": " + value +"<br>" + params[1].seriesName + ": " + value2+"<br>" + params[2].seriesName + ": " + value3; 
            },
            axisPointer : {
                type : 'shadow',
                shadowStyle: {
                    color: 'rgba(150,150,150,0.3)',
                    width: 'auto',
                    type: 'default'
                }
            }
        },
        legend: {
            data: ['我', province, '全国'],
            x: "right",
            y: "top",
           // padding: [30, 5, 5, 5],
            textStyle: {
                color: "#7d7d7d",
                 fontSize: "12",
            }
        },
        toolbox: {
            show : false
        },
        calculable : false,
        grid:{
            x:20,
            y:80,
            x2:20,
            y2:40,
            borderWidth : 0
        },
        color: [ '#f07814','#bedc1e', '#00BEF0'],
        xAxis : [
        {
            type : 'category',
            data : legendData,
            axisTick: {
                show: false
            },
            axisLine: {
                show: false
            },
            axisLabel: {
                textStyle : {
                    color: "#7d7d7d",
                     fontSize: "15",
                }
            }            
        }
        ],
        yAxis : [
        {
            type : 'value',
            show: false
        }
        ],
        series : [
        {
            name:'我',
            type:'bar',
           barGap: 0,
           barCategoryGap: '45%',
           // barWidth: "10",
            // stack: "consume",
            itemStyle : {
                normal : {
                    barBorderRadius: [5,5,0,0],
                    label : {
                        show : true,
                        //position: "insideTop",
                        formatter: function(params) {
                              var value = params.value;
                              try{
                                    value = value.toFixed(2);
                                    // value = (value + '').split('.');
                                    // if(value[1] == null){value[1] = "00"}
                                    // value = value[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value[1];
                                    if(value ==0){value = ""}
                              }catch(e) {}
                              return value ;
                        },
                        textStyle : {
                            color: "#7d7d7d",
                             fontSize: "15",
                        }                   
                    }
                }
            },
            data:myData
        },
        {
            name:province,
            type:'bar',
           barGap: 0,
             // barWidth: "10",
            data:provinceData,
            // stack: "consume",
            itemStyle : {
                normal : {
                   barBorderRadius: [5,5,0,0],
                    label : {
                        show : false ,                               
                    }
                }
            }
        },
        {
            name:'全国',
            type:'bar',
            data:nationData,
           barGap: 0,
            // barWidth: "10",
            // stack: "consume",
            itemStyle : {
                normal : {
                    barBorderRadius: [5,5,0,0],
                    label : {
                        show : labelDisObj,
                        //position: "insideTop",
                        formatter: function(params) {
                              var value = params.value;
                              try{
                                    value = value.toFixed(2);
                                    // value = (value + '').split('.');
                                    // if(value[1] == null){value[1] = "00"}
                                    // value = value[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + '.' + value[1];
                                    if(value ==0){value = ""}
                              }catch(e) {}
                              return value ;
                        },
                        textStyle : {
                            color: "#7d7d7d",
                             fontSize: "15",
                        }                   
                    }
                }
            }
        }]
        };
         
        var test = 0;
        for(var i = 0, len = values.length; i < len; i++){ 
            if (values[i][valueIndex] !=0){
                test = 1;
            }
        }                          
        if(test == 0){
            myChart.showLoading({
                text : '没有同龄人消费金额的数据。',
                //x:'left',
                //y:'',
                effect : 'dynamicLine',
                textStyle : {
                    fontSize : 15,

                }
            }); 
        }
        else{
            myChart.setOption(option, true);
        }     
    }

    require(["lib/echarts/echarts-small", "lib/echarts/theme/macarons"], function(echarts, theme){
        drawCompChart2(theme);
    }); 
    </script>]]></text-property>
                    </text>
                    <data id="2807">
                        <property name="backgroundAttachment">scroll</property>
                        <property name="backgroundPositionX">0%</property>
                        <property name="backgroundPositionY">0%</property>
                        <property name="backgroundRepeat">repeat</property>
                        <property name="fontFamily">"微软雅黑"</property>
                        <property name="fontSize">10pt</property>
                        <property name="fontWeight">normal</property>
                        <property name="fontStyle">normal</property>
                        <property name="fontVariant">normal</property>
                        <property name="color">gray</property>
                        <property name="textLineThrough">none</property>
                        <property name="textOverline">none</property>
                        <property name="textUnderline">none</property>
                        <property name="borderBottomColor">black</property>
                        <property name="borderBottomStyle">none</property>
                        <property name="borderBottomWidth">medium</property>
                        <property name="borderLeftColor">black</property>
                        <property name="borderLeftStyle">none</property>
                        <property name="borderLeftWidth">medium</property>
                        <property name="borderRightColor">black</property>
                        <property name="borderRightStyle">none</property>
                        <property name="borderRightWidth">medium</property>
                        <property name="borderTopColor">black</property>
                        <property name="borderTopStyle">none</property>
                        <property name="borderTopWidth">medium</property>
                        <property name="marginTop">3pt</property>
                        <property name="marginLeft">80pt</property>
                        <property name="marginBottom">0pt</property>
                        <property name="marginRight">0pt</property>
                        <property name="paddingTop">1pt</property>
                        <property name="paddingLeft">1pt</property>
                        <property name="paddingBottom">1pt</property>
                        <property name="paddingRight">1pt</property>
                        <property name="textAlign">left</property>
                        <property name="letterSpacing">normal</property>
                        <property name="lineHeight">normal</property>
                        <property name="orphans">2</property>
                        <property name="textTransform">none</property>
                        <property name="whiteSpace">normal</property>
                        <property name="widows">2</property>
                        <property name="wordSpacing">normal</property>
                        <property name="display">block</property>
                        <property name="pageBreakAfter">auto</property>
                        <property name="pageBreakBefore">auto</property>
                        <property name="pageBreakInside">auto</property>
                        <property name="showIfBlank">false</property>
                        <property name="canShrink">false</property>
                        <property name="overflow">hidden</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">ageTotalVisible == 0</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">summaryCon</property>
                                <expression name="expression" type="javascript">var str= ageTotal;&#13;
var x = str.replace(/\&amp;semi/g, ";").replace(/\&amp;comma/g, ",").replace(/\&amp;under/g, "_");&#13;
var strMe= x.substring(0, x.indexOf("_"));&#13;
var strNation= x.substring(x.lastIndexOf("_")+1);&#13;
&#13;
var nameArrMe = [];&#13;
var valueArrMe = [];&#13;
var arr = strMe.split(";");&#13;
for(var  i=0; i&lt; arr.length; i++){&#13;
    var arr1 = arr[i].split(",");   &#13;
    nameArrMe.push(TransType(arr1[0]));&#13;
    valueArrMe.push(parseFloat(arr1[1]));&#13;
}&#13;
&#13;
var valueArrNation = [];&#13;
var arrNation = strNation.split(";");&#13;
for(var i=0; i&lt; arrNation.length; i++){&#13;
    var arr1 = arrNation[i].split(",");&#13;
    valueArrNation.push(parseFloat(arr1[1]));&#13;
}&#13;
        &#13;
var topItemName=[];&#13;
if(topItemCode.length == 0){&#13;
    topItemName = nameArrMe;&#13;
}&#13;
else {&#13;
    for(var i = 0; i&lt;topItemCode.length ; i++){&#13;
        topItemName.push(TransType(topItemCode[i]));&#13;
    }&#13;
}&#13;
&#13;
    var nameArrFilter = topItemName;    &#13;
    &#13;
    var valueArrMeFilter = [];&#13;
    var valueArrNationFilter = [];&#13;
    for(var i = 0; i&lt;nameArrFilter.length; i++){&#13;
        for(var j = 0; j&lt;nameArrMe.length; j++){&#13;
            if(nameArrMe[j] == nameArrFilter[i]){&#13;
                valueArrMeFilter[i] = valueArrMe[j];&#13;
                valueArrNationFilter[i] = valueArrNation[j];&#13;
                break;              &#13;
            }&#13;
        }&#13;
    }   &#13;
        &#13;
var part1 = "";&#13;
var part2 = " \n高于他人的有：";&#13;
var part3 = " \n低于他人的有：";&#13;
var moreThanNation = [];&#13;
var lessThanNation = [];&#13;
for(var i = 0; i&lt;nameArrFilter.length; i++){&#13;
    if(valueArrMeFilter[i] > valueArrNationFilter[i]){&#13;
        moreThanNation.push(nameArrFilter[i]);&#13;
    }else if(valueArrMeFilter[i] &lt; valueArrNationFilter[i]){&#13;
        lessThanNation.push(nameArrFilter[i]);&#13;
    }&#13;
}&#13;
&#13;
if(moreThanNation.length != 0){&#13;
    for(var i = 0; i&lt;moreThanNation.length; i++){&#13;
        var punc = ((i==moreThanNation.length-1)?"。 ":"， ");&#13;
        part2 += moreThanNation[i] + punc;  &#13;
    }   &#13;
}else{&#13;
    part2 = " \n您本期消费没有高于他人的项目。 ";&#13;
}&#13;
&#13;
if(lessThanNation.length != 0){&#13;
    for(var i = 0; i&lt;lessThanNation.length; i++){&#13;
        var punc = ((i==lessThanNation.length-1)?"。":"， ");&#13;
        part3 += lessThanNation[i] + punc;&#13;
    }&#13;
}else {&#13;
    part3 = " \n您本期消费没有低于他人的项目。 ";   &#13;
}&#13;
&#13;
if(moreThanNation.length == 0 &amp;&amp; lessThanNation.length == 0){&#13;
    part2 = " \n您本期消费的项目都与他人一样。 ";&#13;
    part3 = "";&#13;
}&#13;
&#13;
// for the case all the item and their history have value = 0&#13;
var test1 = 0;&#13;
var test2 = 0;&#13;
for(var i = 0; i&lt;valueArrMeFilter.length; i++){&#13;
    if(valueArrMeFilter[i] != 0){&#13;
        test1 = 1;&#13;
        if(valueArrNationFilter[i] !=0){&#13;
            test2 = 1;&#13;
        }&#13;
    }&#13;
}&#13;
if(test1 == 0){&#13;
    part1 = "\n您本期没有消费，请参考您的同龄人的消费类别总金额的情况。";&#13;
    part2 = "";&#13;
    part3 = "";&#13;
    if(test2 == 0){&#13;
        part1 = "";&#13;
        part2 = "";&#13;
        part3 = "";&#13;
    }&#13;
}&#13;
&#13;
// end&#13;
&#13;
part1 + part2 +part3</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <property name="resultSetColumn">summaryCon</property>
                    </data>
                    <grid id="2831">
                        <property name="marginTop">30pt</property>
                        <property name="height">15pt</property>
                        <column id="2832"/>
                        <row id="2833">
                            <cell id="2834">
                                <property name="backgroundColor">#CDE3F8</property>
                                <property name="borderBottomColor">#0046FF</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">1px</property>
                                <label id="2673">
                                    <property name="backgroundAttachment">scroll</property>
                                    <property name="backgroundPositionX">0%</property>
                                    <property name="backgroundPositionY">0%</property>
                                    <property name="backgroundRepeat">repeat</property>
                                    <property name="fontFamily">"黑体"</property>
                                    <property name="fontSize">11pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="fontStyle">normal</property>
                                    <property name="fontVariant">normal</property>
                                    <property name="color">#0073DC</property>
                                    <property name="textLineThrough">none</property>
                                    <property name="textOverline">none</property>
                                    <property name="textUnderline">none</property>
                                    <property name="borderBottomColor">black</property>
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderBottomWidth">medium</property>
                                    <property name="borderLeftColor">black</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderLeftWidth">medium</property>
                                    <property name="borderRightColor">black</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderRightWidth">medium</property>
                                    <property name="borderTopColor">black</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="borderTopWidth">medium</property>
                                    <property name="marginTop">0pt</property>
                                    <property name="marginLeft">20pt</property>
                                    <property name="marginBottom">3pt</property>
                                    <property name="marginRight">0pt</property>
                                    <property name="paddingTop">1pt</property>
                                    <property name="paddingLeft">1pt</property>
                                    <property name="paddingBottom">1pt</property>
                                    <property name="paddingRight">1pt</property>
                                    <property name="textAlign">left</property>
                                    <property name="letterSpacing">normal</property>
                                    <property name="lineHeight">normal</property>
                                    <property name="orphans">2</property>
                                    <property name="textTransform">none</property>
                                    <property name="whiteSpace">normal</property>
                                    <property name="widows">2</property>
                                    <property name="wordSpacing">normal</property>
                                    <property name="display">block</property>
                                    <property name="pageBreakAfter">auto</property>
                                    <property name="pageBreakBefore">auto</property>
                                    <property name="pageBreakInside">auto</property>
                                    <property name="showIfBlank">false</property>
                                    <property name="canShrink">false</property>
                                    <property name="overflow">hidden</property>
                                    <text-property name="text">消费建议</text-property>
                                </label>
                            </cell>
                        </row>
                    </grid>
                    <label id="2927">
                        <property name="backgroundAttachment">scroll</property>
                        <property name="backgroundPositionX">0%</property>
                        <property name="backgroundPositionY">0%</property>
                        <property name="backgroundRepeat">repeat</property>
                        <property name="fontFamily">"微软雅黑"</property>
                        <property name="fontSize">12pt</property>
                        <property name="fontWeight">normal</property>
                        <property name="fontStyle">normal</property>
                        <property name="fontVariant">normal</property>
                        <property name="color">#828282</property>
                        <property name="textLineThrough">none</property>
                        <property name="textOverline">none</property>
                        <property name="textUnderline">none</property>
                        <property name="borderBottomColor">black</property>
                        <property name="borderBottomStyle">none</property>
                        <property name="borderBottomWidth">medium</property>
                        <property name="borderLeftColor">black</property>
                        <property name="borderLeftStyle">none</property>
                        <property name="borderLeftWidth">medium</property>
                        <property name="borderRightColor">black</property>
                        <property name="borderRightStyle">none</property>
                        <property name="borderRightWidth">medium</property>
                        <property name="borderTopColor">black</property>
                        <property name="borderTopStyle">none</property>
                        <property name="borderTopWidth">medium</property>
                        <property name="marginTop">10pt</property>
                        <property name="marginLeft">30pt</property>
                        <property name="marginRight">10pt</property>
                        <property name="paddingTop">1pt</property>
                        <property name="paddingLeft">1pt</property>
                        <property name="paddingBottom">1pt</property>
                        <property name="paddingRight">1pt</property>
                        <property name="letterSpacing">normal</property>
                        <property name="lineHeight">normal</property>
                        <property name="orphans">2</property>
                        <property name="textTransform">none</property>
                        <property name="whiteSpace">normal</property>
                        <property name="widows">2</property>
                        <property name="wordSpacing">normal</property>
                        <property name="display">block</property>
                        <property name="pageBreakAfter">auto</property>
                        <property name="pageBreakBefore">auto</property>
                        <property name="pageBreakInside">auto</property>
                        <property name="showIfBlank">false</property>
                        <property name="canShrink">false</property>
                        <property name="overflow">hidden</property>
                        <text-property name="text">我们真诚向您推荐：</text-property>
                    </label>
                    <image id="2928">
                        <property name="marginLeft">150pt</property>
                        <property name="marginBottom">30pt</property>
                        <property name="source">url</property>
                        <expression name="uri" type="javascript">baseURL+"shanrong.png"</expression>
                        <list-property name="action">
                            <structure>
                                <property name="linkType">hyperlink</property>
                                <property name="toolTip">到善融商城</property>
                                <expression name="uri" type="constant">http://buy.ccb.com/</expression>
                                <property name="targetWindow">_blank</property>
                            </structure>
                        </list-property>
                    </image>
                </cell>
                <cell id="2894">
                    <property name="backgroundColor">#CDE3F8</property>
                    <property name="paddingTop">0pt</property>
                    <property name="paddingLeft">0pt</property>
                    <property name="paddingBottom">0pt</property>
                    <property name="paddingRight">0pt</property>
                </cell>
            </row>
        </grid>
    </body>
</report>
